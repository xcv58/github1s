{"version":3,"sources":["bootstrap-node.js"],"names":["exports","injectNodeModuleLookupPath","injectPath","Error","Module","require","nodeModulesPath","join","__dirname","originalResolveLookupPaths","_resolveLookupPaths","moduleName","parent","paths","Array","isArray","i","len","length","splice","removeGlobalNodeModuleLookupPaths","globalPaths","commonSuffixLength","slice","configurePortable","product","fs","path","appRoot","dirname","getApplicationPath","process","env","platform","portableDataPath","portableDataName","portable","applicationName","getPortableDataPath","isPortable","existsSync","portableTempPath","isTempPortable"],"mappings":";;;;AAMA,aAOAA,QAAQC,2BAA6B,SAAUC,GAC9C,IAAKA,EACJ,MAAM,IAAIC,MAAM,sBAGjB,MAAMC,EAASC,QAAQ,UAGjBC,EAFOD,QAAQ,QAEQE,KAAKC,UAAW,mBAGvCC,EAA6BL,EAAOM,oBAG1CN,EAAOM,oBAAsB,SAAUC,EAAYC,GAClD,MAAMC,EAAQJ,EAA2BE,EAAYC,GACrD,GAAIE,MAAMC,QAAQF,GACjB,IAAK,IAAIG,EAAI,EAAGC,EAAMJ,EAAMK,OAAQF,EAAIC,EAAKD,IAC5C,GAAIH,EAAMG,KAAOV,EAAiB,CACjCO,EAAMM,OAAOH,EAAG,EAAGd,GACnB,MAKH,OAAOW,IAITb,QAAQoB,kCAAoC,WAC3C,MAAMhB,EAASC,QAAQ,UAEjBgB,EAAcjB,EAAOiB,YAGrBZ,EAA6BL,EAAOM,oBAG1CN,EAAOM,oBAAsB,SAAUC,EAAYC,GAClD,MAAMC,EAAQJ,EAA2BE,EAAYC,GACrD,IAAIU,EAAqB,EACzB,KAAOA,EAAqBT,EAAMK,QAAUL,EAAMA,EAAMK,OAAS,EAAII,KAAwBD,EAAYA,EAAYH,OAAS,EAAII,IACjIA,IAED,OAAOT,EAAMU,MAAM,EAAGV,EAAMK,OAASI,KAUvCtB,QAAQwB,kBAAoB,SAAUC,GACrC,MAAMC,EAAKrB,QAAQ,MACbsB,EAAOtB,QAAQ,QAEfuB,EAAUD,EAAKE,QAAQrB,WAK7B,SAASsB,EAAmBH,GAC3B,OAAII,QAAQC,IAAgB,WACpBJ,EAGiB,WAArBG,QAAQE,SACJN,EAAKE,QAAQF,EAAKE,QAAQF,EAAKE,QAAQD,KAGxCD,EAAKE,QAAQF,EAAKE,QAAQD,IAoBlC,MAAMM,EAdN,SAA6BP,GAC5B,GAAII,QAAQC,IAAqB,gBAChC,OAAOD,QAAQC,IAAqB,gBAGrC,GAAyB,UAArBD,QAAQE,UAA6C,UAArBF,QAAQE,SAC3C,OAAON,EAAKpB,KAAKuB,EAAmBH,GAAO;CAI5C,MAAMQ,EAAmBV,EAAQW,UAAY,GAAGX,EAAQY,gCACxD,OAAOV,EAAKpB,KAAKoB,EAAKE,QAAQC,EAAmBH,IAAQQ,GAGjCG,CAAoBX,GACvCY,IAAe,WAAYd,IAAYC,EAAGc,WAAWN,GACrDO,EAAmBd,EAAKpB,KAAK2B,EAAkB,OAC/CQ,EAAiBH,GAAcb,EAAGc,WAAWC,GAiBnD,OAfIF,EACHR,QAAQC,IAAqB,gBAAIE,SAE1BH,QAAQC,IAAqB,gBAGjCU,IACsB,UAArBX,QAAQE,UACXF,QAAQC,IAAS,IAAIS,EACrBV,QAAQC,IAAU,KAAIS,GAEtBV,QAAQC,IAAY,OAAIS,GAInB,CACNP,iBAAAA,EACAK,WAAAA","file":"bootstrap-node.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n//@ts-check\n'use strict';\n\n/**\n * Add support for redirecting the loading of node modules\n *\n * @param {string} injectPath\n */\nexports.injectNodeModuleLookupPath = function (injectPath) {\n\tif (!injectPath) {\n\t\tthrow new Error('Missing injectPath');\n\t}\n\n\tconst Module = require('module');\n\tconst path = require('path');\n\n\tconst nodeModulesPath = path.join(__dirname, '../node_modules');\n\n\t// @ts-ignore\n\tconst originalResolveLookupPaths = Module._resolveLookupPaths;\n\n\t// @ts-ignore\n\tModule._resolveLookupPaths = function (moduleName, parent) {\n\t\tconst paths = originalResolveLookupPaths(moduleName, parent);\n\t\tif (Array.isArray(paths)) {\n\t\t\tfor (let i = 0, len = paths.length; i < len; i++) {\n\t\t\t\tif (paths[i] === nodeModulesPath) {\n\t\t\t\t\tpaths.splice(i, 0, injectPath);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn paths;\n\t};\n};\n\nexports.removeGlobalNodeModuleLookupPaths = function () {\n\tconst Module = require('module');\n\t// @ts-ignore\n\tconst globalPaths = Module.globalPaths;\n\n\t// @ts-ignore\n\tconst originalResolveLookupPaths = Module._resolveLookupPaths;\n\n\t// @ts-ignore\n\tModule._resolveLookupPaths = function (moduleName, parent) {\n\t\tconst paths = originalResolveLookupPaths(moduleName, parent);\n\t\tlet commonSuffixLength = 0;\n\t\twhile (commonSuffixLength < paths.length && paths[paths.length - 1 - commonSuffixLength] === globalPaths[globalPaths.length - 1 - commonSuffixLength]) {\n\t\t\tcommonSuffixLength++;\n\t\t}\n\t\treturn paths.slice(0, paths.length - commonSuffixLength);\n\t};\n};\n\n/**\n * Helper to enable portable mode.\n *\n * @param {{ portable?: string; applicationName: string; }} product\n * @returns {{ portableDataPath: string; isPortable: boolean; }}\n */\nexports.configurePortable = function (product) {\n\tconst fs = require('fs');\n\tconst path = require('path');\n\n\tconst appRoot = path.dirname(__dirname);\n\n\t/**\n\t * @param {import('path')} path\n\t */\n\tfunction getApplicationPath(path) {\n\t\tif (process.env['VSCODE_DEV']) {\n\t\t\treturn appRoot;\n\t\t}\n\n\t\tif (process.platform === 'darwin') {\n\t\t\treturn path.dirname(path.dirname(path.dirname(appRoot)));\n\t\t}\n\n\t\treturn path.dirname(path.dirname(appRoot));\n\t}\n\n\t/**\n\t * @param {import('path')} path\n\t */\n\tfunction getPortableDataPath(path) {\n\t\tif (process.env['VSCODE_PORTABLE']) {\n\t\t\treturn process.env['VSCODE_PORTABLE'];\n\t\t}\n\n\t\tif (process.platform === 'win32' || process.platform === 'linux') {\n\t\t\treturn path.join(getApplicationPath(path), 'data');\n\t\t}\n\n\t\t// @ts-ignore\n\t\tconst portableDataName = product.portable || `${product.applicationName}-portable-data`;\n\t\treturn path.join(path.dirname(getApplicationPath(path)), portableDataName);\n\t}\n\n\tconst portableDataPath = getPortableDataPath(path);\n\tconst isPortable = !('target' in product) && fs.existsSync(portableDataPath);\n\tconst portableTempPath = path.join(portableDataPath, 'tmp');\n\tconst isTempPortable = isPortable && fs.existsSync(portableTempPath);\n\n\tif (isPortable) {\n\t\tprocess.env['VSCODE_PORTABLE'] = portableDataPath;\n\t} else {\n\t\tdelete process.env['VSCODE_PORTABLE'];\n\t}\n\n\tif (isTempPortable) {\n\t\tif (process.platform === 'win32') {\n\t\t\tprocess.env['TMP'] = portableTempPath;\n\t\t\tprocess.env['TEMP'] = portableTempPath;\n\t\t} else {\n\t\t\tprocess.env['TMPDIR'] = portableTempPath;\n\t\t}\n\t}\n\n\treturn {\n\t\tportableDataPath,\n\t\tisPortable\n\t};\n};\n"]}