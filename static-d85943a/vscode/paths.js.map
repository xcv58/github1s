{"version":3,"sources":["paths.js"],"names":["pkg","require","path","os","getDefaultUserDataPath","appDataPath","process","env","platform","userProfile","Error","join","homedir","name","exports"],"mappings":";;;;AAMA,aAEA,MAAMA,IAAMC,QAAQ,mBACdC,KAAOD,QAAQ,QACfE,GAAKF,QAAQ,MAKnB,SAASG,yBAGR,IAAIC,EAAcC,QAAQC,IAAoB,eAG9C,IAAKF,EACJ,OAAQC,QAAQE,UACf,IAAK,QAEJ,KADAH,EAAcC,QAAQC,IAAa,SACjB,CACjB,MAAME,EAAcH,QAAQC,IAAiB,YAC7C,GAA2B,iBAAhBE,EACV,MAAM,IAAIC,MAAM,oEAEjBL,EAAcH,KAAKS,KAAKF,EAAa,UAAW,WAEjD,MACD,IAAK,SACJJ,EAAcH,KAAKS,KAAKR,GAAGS,UAAW,UAAW,uBACjD,MACD,IAAK,QACJP,EAAcC,QAAQC,IAAqB,iBAAKL,KAAKS,KAAKR,GAAGS,UAAW,WACxE,MACD,QACC,MAAM,IAAIF,MAAM,0BAInB,OAAOR,KAAKS,KAAKN,EAAaL,IAAIa,MAGnCC,QAAQV,uBAAyBA","file":"paths.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n//@ts-check\n'use strict';\n\nconst pkg = require('../package.json');\nconst path = require('path');\nconst os = require('os');\n\n/**\n * @returns {string}\n */\nfunction getDefaultUserDataPath() {\n\n\t// Support global VSCODE_APPDATA environment variable\n\tlet appDataPath = process.env['VSCODE_APPDATA'];\n\n\t// Otherwise check per platform\n\tif (!appDataPath) {\n\t\tswitch (process.platform) {\n\t\t\tcase 'win32':\n\t\t\t\tappDataPath = process.env['APPDATA'];\n\t\t\t\tif (!appDataPath) {\n\t\t\t\t\tconst userProfile = process.env['USERPROFILE'];\n\t\t\t\t\tif (typeof userProfile !== 'string') {\n\t\t\t\t\t\tthrow new Error('Windows: Unexpected undefined %USERPROFILE% environment variable');\n\t\t\t\t\t}\n\t\t\t\t\tappDataPath = path.join(userProfile, 'AppData', 'Roaming');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'darwin':\n\t\t\t\tappDataPath = path.join(os.homedir(), 'Library', 'Application Support');\n\t\t\t\tbreak;\n\t\t\tcase 'linux':\n\t\t\t\tappDataPath = process.env['XDG_CONFIG_HOME'] || path.join(os.homedir(), '.config');\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Platform not supported');\n\t\t}\n\t}\n\n\treturn path.join(appDataPath, pkg.name);\n}\n\nexports.getDefaultUserDataPath = getDefaultUserDataPath;\n"]}