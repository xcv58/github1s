{"version":3,"sources":["vs/code/browser/workbench/fake","vs/code/browser/workbench/file:/home/runner/work/github1s/github1s/lib/vscode/src/vs/github1s/notification.ts","vs/code/browser/workbench/file:/home/runner/work/github1s/github1s/lib/vscode/src/vs/code/browser/workbench/workbench.ts"],"names":["__m","__M","deps","result","i","len","length","define","notificationHtml","exports","renderNotification","window","localStorage","getItem","notificationElement","document","createElement","classList","add","innerHTML","body","appendChild","querySelector","onclick","setItem","removeChild","getGitHub1sCustomCommands","id","handler","util_1","getBrowserUrl","replaceBrowserUrl","doCreateUri","path","queryValues","query","undefined","index","forEach","value","key","prefix","encodeURIComponent","uri_1","URI","parse","location","href","with","LocalStorageCredentialsProvider","[object Object]","authSessionInfo","authSessionElement","getElementById","authSessionElementAttribute","getAttribute","JSON","error","this","setPassword","product_1","default","urlProtocol","stringify","authService","providerId","scopes","map","accessToken","credentials","_credentials","serializedCredentials","CREDENTIALS_OPENED_KEY","Array","isArray","service","account","doGetPassword","credential","password","doDeletePassword","push","save","logout","console","log","found","filter","Map","set","String","request_1","request","url","toString","cancellation_1","CancellationToken","None","PollingURLCallbackProvider","lifecycle_1","Disposable","_onCallback","_register","event_1","Emitter","onCallback","event","options","requestId","uuid_1","generateUuid","QUERY_KEYS","REQUEST_ID","scheme","authority","fragment","SCHEME","AUTHORITY","PATH","QUERY","FRAGMENT","periodicFetchCallback","Date","now","startTime","content","buffer_1","streamToBuffer","stream","byteLength","fire","revive","FETCH_TIMEOUT","setTimeout","FETCH_INTERVAL","WorkspaceProvider","workspace","payload","reuse","isSame","targetHref","createTargetUrl","browser_1","isStandalone","open","windows_1","isFolderToOpen","origin","pathname","QUERY_PARAM_FOLDER","folderUri","isWorkspaceToOpen","QUERY_PARAM_WORKSPACE","workspaceUri","QUERY_PARAM_EMPTY_WINDOW","QUERY_PARAM_PAYLOAD","workspaceA","workspaceB","resources_1","isEqual","network_1","Schemas","vscodeRemote","WindowIndicator","onDidChange","Event","repositoryOwner","repositoryName","uri","split","Boolean","label","nls_1","localize","tooltip","repoOwner","repoName","config","from","staticExtensions","enableSyncByDefault","webWorkerExtensionHostIframeSrc","_a","extension","extensionLocation","foundWorkspace","Object","create","logLevel","URL","searchParams","workspaceProvider","homeIndicator","icon","title","windowIndicator","hasRemote","settingsSyncOptions","enabled","enablementHandler","enablement","queryString","_b","remove","workbench_web_api_1","assign","commands","log_1","parseLogLevel","productQualityChangeHandler","quality","urlCallbackProvider","credentialsProvider","notification_1","call"],"mappings":"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","file":"workbench.js","sourcesContent":["}).call(this);","/**\n * @file github1s notification\n * @author netcon\n */\n\nimport 'vs/css!./notification';\n\nconst NOTIFICATION_STORAGE_KEY = 'GITHUB1S_NOTIFICATION';\n// change it if a new notification should be shown\nconst NOTIFICATION_STORAGE_VALUE = '20210212';\n\nconst notification = {\n\ttitle: 'ATTENTION: This page is NOT officially provided by GitHub.',\n\tcontent: 'GitHub1s is an open source project, which is not officially provided by GitHub.',\n\tlink: 'https://github.com/conwnet/github1s',\n};\n\nconst notificationHtml = `\n<div class=\"notification-main\">\n\t<div class=\"notification-title\">${notification.title}</div>\n\t<div class=\"notification-content\">\n\t\t${notification.content}\n\t\t<a class=\"notification-link\" href=\"${notification.link}\" target=\"_blank\">See more</a>\n\t</div>\n</div>\n<div class=\"notification-footer\">\n\t<button class=\"notification-confirm-button\">I know</button>\n\t<div class=\"notification-show-me-again\">\n\t\t<input type=\"checkbox\" checked>Don't show me again</div>\n\t</div>\n</div>\n`;\n\nexport const renderNotification = () => {\n\t// if user has confirm the notification and check `don't show me again`, ignore it\n\tif (!window.localStorage || window.localStorage.getItem(NOTIFICATION_STORAGE_KEY) === NOTIFICATION_STORAGE_VALUE) {\n\t\treturn;\n\t}\n\n\tconst notificationElement = <HTMLDivElement>document.createElement('div');\n\tnotificationElement.classList.add('github1s-notification');\n\tnotificationElement.innerHTML = notificationHtml;\n\tdocument.body.appendChild(notificationElement);\n\n\t(<HTMLButtonElement>notificationElement.querySelector('.notification-confirm-button'))!.onclick = () => {\n\t\tconst notShowMeAgain = !!((<HTMLInputElement>notificationElement.querySelector('.notification-show-me-again input'))!.checked);\n\t\tif (notShowMeAgain) {\n\t\t\twindow.localStorage.setItem(NOTIFICATION_STORAGE_KEY, NOTIFICATION_STORAGE_VALUE);\n\t\t}\n\t\tdocument.body.removeChild(notificationElement);\n\t};\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IWorkbenchConstructionOptions, create, ICredentialsProvider, IURLCallbackProvider, IWorkspaceProvider, IWorkspace, IWindowIndicator, IHomeIndicator, IProductQualityChangeHandler, ISettingsSyncOptions } from 'vs/workbench/workbench.web.api';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { streamToBuffer } from 'vs/base/common/buffer';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { request } from 'vs/base/parts/request/browser/request';\nimport { isFolderToOpen, isWorkspaceToOpen } from 'vs/platform/windows/common/windows';\nimport { isEqual } from 'vs/base/common/resources';\nimport { isStandalone } from 'vs/base/browser/browser';\nimport { localize } from 'vs/nls';\nimport { Schemas } from 'vs/base/common/network';\nimport product from 'vs/platform/product/common/product';\nimport { parseLogLevel } from 'vs/platform/log/common/log';\nimport { getBrowserUrl, replaceBrowserUrl } from 'vs/github1s/util';\nimport { renderNotification } from 'vs/github1s/notification';\n\n// custom vs code commands defined by github1s\nconst getGitHub1sCustomCommands: () => ({id: string, handler: (...args: any[]) => unknown }[]) = () => [\n\t{ id: 'github1s.vscode.get-browser-url', handler: getBrowserUrl },\n\t{ id: 'github1s.vscode.replace-browser-url', handler: replaceBrowserUrl },\n];\n\nfunction doCreateUri(path: string, queryValues: Map<string, string>): URI {\n\tlet query: string | undefined = undefined;\n\n\tif (queryValues) {\n\t\tlet index = 0;\n\t\tqueryValues.forEach((value, key) => {\n\t\t\tif (!query) {\n\t\t\t\tquery = '';\n\t\t\t}\n\n\t\t\tconst prefix = (index++ === 0) ? '' : '&';\n\t\t\tquery += `${prefix}${key}=${encodeURIComponent(value)}`;\n\t\t});\n\t}\n\n\treturn URI.parse(window.location.href).with({ path, query });\n}\n\ninterface ICredential {\n\tservice: string;\n\taccount: string;\n\tpassword: string;\n}\n\nclass LocalStorageCredentialsProvider implements ICredentialsProvider {\n\n\tstatic readonly CREDENTIALS_OPENED_KEY = 'credentials.provider';\n\n\tprivate readonly authService: string | undefined;\n\n\tconstructor() {\n\t\tlet authSessionInfo: { readonly id: string, readonly accessToken: string, readonly providerId: string, readonly canSignOut?: boolean, readonly scopes: string[][] } | undefined;\n\t\tconst authSessionElement = document.getElementById('vscode-workbench-auth-session');\n\t\tconst authSessionElementAttribute = authSessionElement ? authSessionElement.getAttribute('data-settings') : undefined;\n\t\tif (authSessionElementAttribute) {\n\t\t\ttry {\n\t\t\t\tauthSessionInfo = JSON.parse(authSessionElementAttribute);\n\t\t\t} catch (error) { /* Invalid session is passed. Ignore. */ }\n\t\t}\n\n\t\tif (authSessionInfo) {\n\t\t\t// Settings Sync Entry\n\t\t\tthis.setPassword(`${product.urlProtocol}.login`, 'account', JSON.stringify(authSessionInfo));\n\n\t\t\t// Auth extension Entry\n\t\t\tthis.authService = `${product.urlProtocol}-${authSessionInfo.providerId}.login`;\n\t\t\tthis.setPassword(this.authService, 'account', JSON.stringify(authSessionInfo.scopes.map(scopes => ({\n\t\t\t\tid: authSessionInfo!.id,\n\t\t\t\tscopes,\n\t\t\t\taccessToken: authSessionInfo!.accessToken\n\t\t\t}))));\n\t\t}\n\t}\n\n\tprivate _credentials: ICredential[] | undefined;\n\tprivate get credentials(): ICredential[] {\n\t\tif (!this._credentials) {\n\t\t\ttry {\n\t\t\t\tconst serializedCredentials = window.localStorage.getItem(LocalStorageCredentialsProvider.CREDENTIALS_OPENED_KEY);\n\t\t\t\tif (serializedCredentials) {\n\t\t\t\t\tthis._credentials = JSON.parse(serializedCredentials);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\t// ignore\n\t\t\t}\n\n\t\t\tif (!Array.isArray(this._credentials)) {\n\t\t\t\tthis._credentials = [];\n\t\t\t}\n\t\t}\n\n\t\treturn this._credentials;\n\t}\n\n\tprivate save(): void {\n\t\twindow.localStorage.setItem(LocalStorageCredentialsProvider.CREDENTIALS_OPENED_KEY, JSON.stringify(this.credentials));\n\t}\n\n\tasync getPassword(service: string, account: string): Promise<string | null> {\n\t\treturn this.doGetPassword(service, account);\n\t}\n\n\tprivate async doGetPassword(service: string, account?: string): Promise<string | null> {\n\t\tfor (const credential of this.credentials) {\n\t\t\tif (credential.service === service) {\n\t\t\t\tif (typeof account !== 'string' || account === credential.account) {\n\t\t\t\t\treturn credential.password;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tasync setPassword(service: string, account: string, password: string): Promise<void> {\n\t\tthis.doDeletePassword(service, account);\n\n\t\tthis.credentials.push({ service, account, password });\n\n\t\tthis.save();\n\n\t\ttry {\n\t\t\tif (password && service === this.authService) {\n\t\t\t\tconst value = JSON.parse(password);\n\t\t\t\tif (Array.isArray(value) && value.length === 0) {\n\t\t\t\t\tawait this.logout(service);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\tasync deletePassword(service: string, account: string): Promise<boolean> {\n\t\tconst result = await this.doDeletePassword(service, account);\n\n\t\tif (result && service === this.authService) {\n\t\t\ttry {\n\t\t\t\tawait this.logout(service);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate async doDeletePassword(service: string, account: string): Promise<boolean> {\n\t\tlet found = false;\n\n\t\tthis._credentials = this.credentials.filter(credential => {\n\t\t\tif (credential.service === service && credential.account === account) {\n\t\t\t\tfound = true;\n\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\n\t\tif (found) {\n\t\t\tthis.save();\n\t\t}\n\n\t\treturn found;\n\t}\n\n\tasync findPassword(service: string): Promise<string | null> {\n\t\treturn this.doGetPassword(service);\n\t}\n\n\tasync findCredentials(service: string): Promise<Array<{ account: string, password: string }>> {\n\t\treturn this.credentials\n\t\t\t.filter(credential => credential.service === service)\n\t\t\t.map(({ account, password }) => ({ account, password }));\n\t}\n\n\tprivate async logout(service: string): Promise<void> {\n\t\tconst queryValues: Map<string, string> = new Map();\n\t\tqueryValues.set('logout', String(true));\n\t\tqueryValues.set('service', service);\n\n\t\tawait request({\n\t\t\turl: doCreateUri('/auth/logout', queryValues).toString(true)\n\t\t}, CancellationToken.None);\n\t}\n}\n\nclass PollingURLCallbackProvider extends Disposable implements IURLCallbackProvider {\n\n\tstatic readonly FETCH_INTERVAL = 500; \t\t\t// fetch every 500ms\n\tstatic readonly FETCH_TIMEOUT = 5 * 60 * 1000; \t// ...but stop after 5min\n\n\tstatic readonly QUERY_KEYS = {\n\t\tREQUEST_ID: 'vscode-requestId',\n\t\tSCHEME: 'vscode-scheme',\n\t\tAUTHORITY: 'vscode-authority',\n\t\tPATH: 'vscode-path',\n\t\tQUERY: 'vscode-query',\n\t\tFRAGMENT: 'vscode-fragment'\n\t};\n\n\tprivate readonly _onCallback = this._register(new Emitter<URI>());\n\treadonly onCallback = this._onCallback.event;\n\n\tcreate(options?: Partial<UriComponents>): URI {\n\t\tconst queryValues: Map<string, string> = new Map();\n\n\t\tconst requestId = generateUuid();\n\t\tqueryValues.set(PollingURLCallbackProvider.QUERY_KEYS.REQUEST_ID, requestId);\n\n\t\tconst { scheme, authority, path, query, fragment } = options ? options : { scheme: undefined, authority: undefined, path: undefined, query: undefined, fragment: undefined };\n\n\t\tif (scheme) {\n\t\t\tqueryValues.set(PollingURLCallbackProvider.QUERY_KEYS.SCHEME, scheme);\n\t\t}\n\n\t\tif (authority) {\n\t\t\tqueryValues.set(PollingURLCallbackProvider.QUERY_KEYS.AUTHORITY, authority);\n\t\t}\n\n\t\tif (path) {\n\t\t\tqueryValues.set(PollingURLCallbackProvider.QUERY_KEYS.PATH, path);\n\t\t}\n\n\t\tif (query) {\n\t\t\tqueryValues.set(PollingURLCallbackProvider.QUERY_KEYS.QUERY, query);\n\t\t}\n\n\t\tif (fragment) {\n\t\t\tqueryValues.set(PollingURLCallbackProvider.QUERY_KEYS.FRAGMENT, fragment);\n\t\t}\n\n\t\t// Start to poll on the callback being fired\n\t\tthis.periodicFetchCallback(requestId, Date.now());\n\n\t\treturn doCreateUri('/callback', queryValues);\n\t}\n\n\tprivate async periodicFetchCallback(requestId: string, startTime: number): Promise<void> {\n\n\t\t// Ask server for callback results\n\t\tconst queryValues: Map<string, string> = new Map();\n\t\tqueryValues.set(PollingURLCallbackProvider.QUERY_KEYS.REQUEST_ID, requestId);\n\n\t\tconst result = await request({\n\t\t\turl: doCreateUri('/fetch-callback', queryValues).toString(true)\n\t\t}, CancellationToken.None);\n\n\t\t// Check for callback results\n\t\tconst content = await streamToBuffer(result.stream);\n\t\tif (content.byteLength > 0) {\n\t\t\ttry {\n\t\t\t\tthis._onCallback.fire(URI.revive(JSON.parse(content.toString())));\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\n\t\t\treturn; // done\n\t\t}\n\n\t\t// Continue fetching unless we hit the timeout\n\t\tif (Date.now() - startTime < PollingURLCallbackProvider.FETCH_TIMEOUT) {\n\t\t\tsetTimeout(() => this.periodicFetchCallback(requestId, startTime), PollingURLCallbackProvider.FETCH_INTERVAL);\n\t\t}\n\t}\n\n}\n\nclass WorkspaceProvider implements IWorkspaceProvider {\n\n\tstatic QUERY_PARAM_EMPTY_WINDOW = 'ew';\n\tstatic QUERY_PARAM_FOLDER = 'folder';\n\tstatic QUERY_PARAM_WORKSPACE = 'workspace';\n\n\tstatic QUERY_PARAM_PAYLOAD = 'payload';\n\n\tconstructor(\n\t\tpublic readonly workspace: IWorkspace,\n\t\tpublic readonly payload: object\n\t) { }\n\n\tasync open(workspace: IWorkspace, options?: { reuse?: boolean, payload?: object }): Promise<void> {\n\t\tif (options?.reuse && !options.payload && this.isSame(this.workspace, workspace)) {\n\t\t\treturn; // return early if workspace and environment is not changing and we are reusing window\n\t\t}\n\n\t\tconst targetHref = this.createTargetUrl(workspace, options);\n\t\tif (targetHref) {\n\t\t\tif (options?.reuse) {\n\t\t\t\twindow.location.href = targetHref;\n\t\t\t} else {\n\t\t\t\tif (isStandalone) {\n\t\t\t\t\twindow.open(targetHref, '_blank', 'toolbar=no'); // ensures to open another 'standalone' window!\n\t\t\t\t} else {\n\t\t\t\t\twindow.open(targetHref);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate createTargetUrl(workspace: IWorkspace, options?: { reuse?: boolean, payload?: object }): string | undefined {\n\n\t\t// Empty\n\t\tlet targetHref: string | undefined = undefined;\n\t\tif (!workspace) {\n\t\t\ttargetHref = `${document.location.origin}${document.location.pathname}?${WorkspaceProvider.QUERY_PARAM_EMPTY_WINDOW}=true`;\n\t\t}\n\n\t\t// Folder\n\t\telse if (isFolderToOpen(workspace)) {\n\t\t\ttargetHref = `${document.location.origin}${document.location.pathname}?${WorkspaceProvider.QUERY_PARAM_FOLDER}=${encodeURIComponent(workspace.folderUri.toString())}`;\n\t\t}\n\n\t\t// Workspace\n\t\telse if (isWorkspaceToOpen(workspace)) {\n\t\t\ttargetHref = `${document.location.origin}${document.location.pathname}?${WorkspaceProvider.QUERY_PARAM_WORKSPACE}=${encodeURIComponent(workspace.workspaceUri.toString())}`;\n\t\t}\n\n\t\t// Append payload if any\n\t\tif (options?.payload) {\n\t\t\ttargetHref += `&${WorkspaceProvider.QUERY_PARAM_PAYLOAD}=${encodeURIComponent(JSON.stringify(options.payload))}`;\n\t\t}\n\n\t\treturn targetHref;\n\t}\n\n\tprivate isSame(workspaceA: IWorkspace, workspaceB: IWorkspace): boolean {\n\t\tif (!workspaceA || !workspaceB) {\n\t\t\treturn workspaceA === workspaceB; // both empty\n\t\t}\n\n\t\tif (isFolderToOpen(workspaceA) && isFolderToOpen(workspaceB)) {\n\t\t\treturn isEqual(workspaceA.folderUri, workspaceB.folderUri); // same workspace\n\t\t}\n\n\t\tif (isWorkspaceToOpen(workspaceA) && isWorkspaceToOpen(workspaceB)) {\n\t\t\treturn isEqual(workspaceA.workspaceUri, workspaceB.workspaceUri); // same workspace\n\t\t}\n\n\t\treturn false;\n\t}\n\n\thasRemote(): boolean {\n\t\tif (this.workspace) {\n\t\t\tif (isFolderToOpen(this.workspace)) {\n\t\t\t\treturn this.workspace.folderUri.scheme === Schemas.vscodeRemote;\n\t\t\t}\n\n\t\t\tif (isWorkspaceToOpen(this.workspace)) {\n\t\t\t\treturn this.workspace.workspaceUri.scheme === Schemas.vscodeRemote;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n}\n\nclass WindowIndicator implements IWindowIndicator {\n\n\treadonly onDidChange = Event.None;\n\n\treadonly label: string;\n\treadonly tooltip: string;\n\treadonly command: string | undefined;\n\n\tconstructor(workspace: IWorkspace) {\n\t\tlet repositoryOwner: string | undefined = undefined;\n\t\tlet repositoryName: string | undefined = undefined;\n\n\t\tif (workspace) {\n\t\t\tlet uri: URI | undefined = undefined;\n\t\t\tif (isFolderToOpen(workspace)) {\n\t\t\t\turi = workspace.folderUri;\n\t\t\t} else if (isWorkspaceToOpen(workspace)) {\n\t\t\t\turi = workspace.workspaceUri;\n\t\t\t}\n\n\t\t\tif (uri?.scheme === 'github1s') {\n\t\t\t\t[repositoryOwner = 'conwnet', repositoryName = 'github1s'] = URI.parse(getBrowserUrl()).path.split('/').filter(Boolean);\n\t\t\t}\n\t\t}\n\n\t\t// Repo\n\t\tif (repositoryName && repositoryOwner) {\n\t\t\tthis.label = localize('playgroundLabelRepository', \"$(remote) GitHub1s: {0}/{1}\", repositoryOwner, repositoryName);\n\t\t\tthis.tooltip = localize('playgroundRepositoryTooltip', \"GitHub1s: {0}/{1}\", repositoryOwner, repositoryName);\n\t\t}\n\n\t\t// No Repo\n\t\telse {\n\t\t\tthis.label = localize('playgroundLabel', \"$(remote) GitHub1s\");\n\t\t\tthis.tooltip = localize('playgroundTooltip', \"GitHub1s\");\n\t\t}\n\t}\n}\n\n(function () {\n\tconst [repoOwner = 'conwnet', repoName = 'github1s'] = (URI.parse(window.location.href).path || '').split('/').filter(Boolean);\n\tconst config: IWorkbenchConstructionOptions & { folderUri?: UriComponents, workspaceUri?: UriComponents } = {\n\t\t// the empty authority means github1s should get it from `window.location.href`\n\t\tfolderUri: URI.from({ scheme: \"github1s\", path: '/', authority: '' }),\n\t\tstaticExtensions: [],\n\t\tenableSyncByDefault: false,\n\t\twebWorkerExtensionHostIframeSrc: document.getElementById('vscode-extension-host-iframe-src')?.getAttribute('data-settings') as string,\n};\n\n\t// Revive static extension locations\n\tif (Array.isArray(config.staticExtensions)) {\n\t\tconfig.staticExtensions.forEach(extension => {\n\t\t\textension.extensionLocation = URI.revive(extension.extensionLocation);\n\t\t});\n\t}\n\n\t// Find workspace to open and payload\n\tlet foundWorkspace = false;\n\tlet workspace: IWorkspace;\n\tlet payload = Object.create(null);\n\tlet logLevel: string | undefined = undefined;\n\n\tconst query = new URL(document.location.href).searchParams;\n\tquery.forEach((value, key) => {\n\t\tswitch (key) {\n\n\t\t\t// Folder\n\t\t\tcase WorkspaceProvider.QUERY_PARAM_FOLDER:\n\t\t\t\tworkspace = { folderUri: URI.parse(value) };\n\t\t\t\tfoundWorkspace = true;\n\t\t\t\tbreak;\n\n\t\t\t// Workspace\n\t\t\tcase WorkspaceProvider.QUERY_PARAM_WORKSPACE:\n\t\t\t\tworkspace = { workspaceUri: URI.parse(value) };\n\t\t\t\tfoundWorkspace = true;\n\t\t\t\tbreak;\n\n\t\t\t// Empty\n\t\t\tcase WorkspaceProvider.QUERY_PARAM_EMPTY_WINDOW:\n\t\t\t\tworkspace = undefined;\n\t\t\t\tfoundWorkspace = true;\n\t\t\t\tbreak;\n\n\t\t\t// Payload\n\t\t\tcase WorkspaceProvider.QUERY_PARAM_PAYLOAD:\n\t\t\t\ttry {\n\t\t\t\t\tpayload = JSON.parse(value);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error(error); // possible invalid JSON\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// Log level\n\t\t\tcase 'logLevel':\n\t\t\t\tlogLevel = value;\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\t// If no workspace is provided through the URL, check for config attribute from server\n\tif (!foundWorkspace) {\n\t\tif (config.folderUri) {\n\t\t\tworkspace = { folderUri: URI.revive(config.folderUri) };\n\t\t} else if (config.workspaceUri) {\n\t\t\tworkspace = { workspaceUri: URI.revive(config.workspaceUri) };\n\t\t} else {\n\t\t\tworkspace = undefined;\n\t\t}\n\t}\n\n\t// Workspace Provider\n\tconst workspaceProvider = new WorkspaceProvider(workspace, payload);\n\n\t// Home Indicator\n\tconst homeIndicator: IHomeIndicator = {\n\t\thref: `https://github.com/${repoOwner}/${repoName}`,\n\t\ticon: 'github',\n\t\ttitle: localize('home', \"Home\")\n\t};\n\n\t// Window indicator (unless connected to a remote)\n\tlet windowIndicator: WindowIndicator | undefined = undefined;\n\tif (!workspaceProvider.hasRemote()) {\n\t\twindowIndicator = new WindowIndicator(workspace);\n\t}\n\n\t// Product Quality Change Handler\n\tconst productQualityChangeHandler: IProductQualityChangeHandler = (quality) => {\n\t\tlet queryString = `quality=${quality}`;\n\n\t\t// Save all other query params we might have\n\t\tconst query = new URL(document.location.href).searchParams;\n\t\tquery.forEach((value, key) => {\n\t\t\tif (key !== 'quality') {\n\t\t\t\tqueryString += `&${key}=${value}`;\n\t\t\t}\n\t\t});\n\n\t\twindow.location.href = `${window.location.origin}?${queryString}`;\n\t};\n\n\t// settings sync options\n\tconst settingsSyncOptions: ISettingsSyncOptions | undefined = config.settingsSyncOptions ? {\n\t\tenabled: config.settingsSyncOptions.enabled,\n\t\tenablementHandler: (enablement) => {\n\t\t\tlet queryString = `settingsSync=${enablement ? 'true' : 'false'}`;\n\n\t\t\t// Save all other query params we might have\n\t\t\tconst query = new URL(document.location.href).searchParams;\n\t\t\tquery.forEach((value, key) => {\n\t\t\t\tif (key !== 'settingsSync') {\n\t\t\t\t\tqueryString += `&${key}=${value}`;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\twindow.location.href = `${window.location.origin}?${queryString}`;\n\t\t}\n\t} : undefined;\n\n\t// Remove the html load spinner\n\tdocument.querySelector('#load-spinner')?.remove();\n\n\t// Finally create workbench\n\tcreate(document.body, {\n\t\t...config,\n\t\tcommands: getGitHub1sCustomCommands(),\n\t\tlogLevel: logLevel ? parseLogLevel(logLevel) : undefined,\n\t\tsettingsSyncOptions,\n\t\thomeIndicator,\n\t\twindowIndicator,\n\t\tproductQualityChangeHandler,\n\t\tworkspaceProvider,\n\t\turlCallbackProvider: new PollingURLCallbackProvider(),\n\t\tcredentialsProvider: new LocalStorageCredentialsProvider()\n\t});\n\n\tsetTimeout(() => renderNotification(), 1000);\n})();\n"]}