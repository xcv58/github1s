{"version":3,"sources":["vs/loader.js"],"names":["define","AMDLoader","CSSLoaderPlugin","_amdLoaderGlobal","this","_commonjsGlobal","global","Environment","_detected","_isWindows","_isNode","_isElectronRenderer","_isWebWorker","Object","defineProperty","prototype","get","_detect","enumerable","configurable","module","exports","process","versions","electron","type","importScripts","navigator","userAgent","indexOf","platform","LoaderEvent","detail","timestamp","LoaderEventRecorder","loaderAvailableTimestamp","_events","record","push","Utilities","getHighPerformanceTimestamp","getEvents","NullLoaderEventRecorder","INSTANCE","fileUriToFilePath","isWindows","uri","decodeURI","replace","test","substr","startsWith","haystack","needle","length","endsWith","containsQueryString","url","isAbsolutePath","forEachProperty","obj","callback","key","hasOwnProperty","isEmpty","recursiveClone","RegExp","Array","isArray","getPrototypeOf","result","value","generateAnonymousModule","NEXT_ANONYMOUS_ID","isAnonymousModule","id","PERFORMANCE_NOW_PROBED","HAS_PERFORMANCE_NOW","performance","now","Date","ensureError","err","Error","message","String","stack","ConfigurationOptionsUtil","validateConfigurationOptions","options","baseUrl","isBuild","paths","config","catchError","recordStats","urlArgs","onError","phase","console","error","moduleId","neededBy","ignoreDuplicateModules","cspNonce","preferScriptTags","nodeModules","nodeCachedData","seed","writeDelay","path","undefined","mergeConfigurationOptions","overwrite","base","concat","key2","value2","Configuration","env","_env","_createIgnoreDuplicateModulesMap","_createNodeModulesMap","_createSortedPathsRules","nodeRequire","main","filename","isNode","nodeMain","dirnameIndex","Math","max","lastIndexOf","substring","ignoreDuplicateModulesMap","i","nodeModulesMap","create","_i","_a","nodeModule","_this","sortedPathsRules","from","to","sort","a","b","cloneAndMerge","getOptionsLiteral","_applyPaths","pathRule","len","j","lenJ","_addUrlArgsToUrl","_addUrlArgsIfNecessaryToUrl","_addUrlArgsIfNecessaryToUrls","urls","moduleIdToPaths","amdModulesPattern","results","requireToUrl","isDuplicateMessageIgnoredFor","getConfigForModule","shouldCatchError","shouldRecordStats","OnlyOnceScriptLoader","_scriptLoader","_callbackMap","load","moduleManager","scriptSrc","errorback","isWebWorker","WorkerScriptLoader","isElectronRenderer","getConfig","BrowserScriptLoader","NodeScriptLoader","scriptCallbacks","triggerCallback","triggerErrorback","attachListeners","script","unbind","removeEventListener","loadEventListener","errorEventListener","e","addEventListener","opts","ensureRecordedNodeRequire","getRecorder","pieces","split","moduleExports_1","enqueueDefineAnonymousModule","document","createElement","setAttribute","trustedTypesPolicy","createScriptURL","getElementsByTagName","appendChild","_didInitialize","_didPatchNodeRequire","_init","_fs","_vm","_path","_crypto","_initNodeRequire","that","Module","_compile","content","hashData","scriptSource","wrap","recorder","cachedDataPath","_getCachedDataPath","data","readFileSync","slice","cachedData","_e","Script","compileWrapper","runInThisContext","dirname","require","mod","constructor","resolve","request","_resolveFilename","mainModule","extensions","_extensions","cache","_cache","makeRequireFunction","args","Buffer","apply","_handleCachedData","_verifyCachedData","nodeInstrumenter","c","moduleExports_2","normalizedScriptSrc_1","normalize","vmScriptPathOrUri_1","_getElectronRendererScriptPathOrUri","wantsCachedData_1","Boolean","cachedDataPath_1","_readSourceAndCachedData","charCodeAt","_BOM","_PREFIX","_SUFFIX","scriptOpts","_createAndEvalScript","contents","ret","globalDefineFunc","getGlobalAMDDefineFunc","receivedDefineCall","localDefineFunc","arguments","amd","call","getGlobalAMDRequireFunc","driveLetterMatch","match","toUpperCase","hash","createHash","update","digest","basename","join","createCachedData","cachedDataRejected","unlink","_createAndWriteCachedData","timeout","ceil","random","lastSize","iteration","createLoop","setTimeout","writeFile","pow","sourcePath","source_1","cachedData_1","hashData_1","steps_1","step_1","readFile","encoding","hashDataNow","equals","_nodeRequire","__$__isRecorded","what","createScriptLoader","ModuleIdResolver","fromModuleId","lastSlash","fromModulePath","_normalizeModuleId","pattern","r","resolveModule","ROOT","strId","dependencies","moduleIdResolver","_callback","_errorback","exportsPassedIn","unresolvedDependenciesCount","_isComplete","_safeInvokeFunction","returnedValue","producedError","_invokeFactory","strModuleId","dependenciesValues","complete","onDependencyError","isComplete","ModuleIdProvider","_nextId","_strModuleIdToIntModuleId","Map","_intModuleIdToStrModuleId","getModuleId","getMaxModuleId","set","getStrModuleId","RegularDependency","EXPORTS","MODULE","REQUIRE","PluginDependency","pluginId","pluginParam","ModuleManager","scriptLoader","defineFunc","requireFunc","_loaderAvailableTimestamp","_defineFunc","_requireFunc","_moduleIdProvider","_config","_modules2","_knownModules2","_inverseDependencies2","_inversePluginDependencies2","_currentAnnonymousDefineCall","_recorder","_buildInfoPath","_buildInfoDefineStack","_buildInfoDependencies","reset","_findRelevantLocationInStack","str","normalizedPath","stackPieces","m","stackPath","stackLine","stackColumn","trimPathOffset","line","parseInt","col","getBuildInfo","resultLen","location_1","defineStack","defineLocation","shim","getLoaderEvents","defineModule","warn","_normalizeDependencies","map","dep","_resolve","_normalizeDependency","dependency","bangIndex","strPluginId","dependencyId","_relativeRequire","synchronousRequire","_strModuleId","configure","params","shouldOverwrite","oldShouldRecordStats","_onLoad","defineCall","_createLoadError","_err","intModuleId","_onLoadError","seenModuleId","someoneNotified","queue","queueElement","shift","inverseDeps","inverseDep","_hasDependencyPath","fromId","toId","inQueue","dependencyModule","_findCyclePath","depth","_createRequire","toUrl","getStats","__$__nodeRequire","_loadModule","lastPathIndex","loadNextPath","currentPath_1","recorder_1","_loadPluginDependency","plugin","pluginDependency","cyclePath","reverse","inversePluginDeps","_onModuleComplete","inverseDependencyId","inverseDependency","delete","DefineFunc","jQuery","_requireFunc_config","RequireFunc","init","doNotInitLoader","BrowserCSSLoader","_pendingLoads","name","linkNode","_insertLinkNode","head","other","insertBefore","createLinkTag","cssUrl","externalCallback","externalErrorback","_linkTagExists","nameAttr","hrefAttr","links","getAttribute","CSSPlugin","_cssLoader","req","disabled","NLSLoaderPlugin","__spreadArrays","s","il","k","jl","_isPseudo","location","_format","rest","index","arg","isPseudo","localize","createScopedLocalize","scope","idx","defaultValue","restArgs","NLSPlugin","setPseudoTranslation","pluginConfig","language","availableLanguages","findLanguageForModule","suffix","DEFAULT_TAG","messagesLoaded_1","messages","loadBundle"],"mappings":"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","file":"loader.js","sourcesContent":["/*!--------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/*---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n * Please make sure to make edits in the .ts file at https://github.com/microsoft/vscode-loader/\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *--------------------------------------------------------------------------------------------*/\nvar _amdLoaderGlobal = this;\nvar _commonjsGlobal = typeof global === 'object' ? global : {};\nvar AMDLoader;\n(function (AMDLoader) {\n    AMDLoader.global = _amdLoaderGlobal;\n    var Environment = /** @class */ (function () {\n        function Environment() {\n            this._detected = false;\n            this._isWindows = false;\n            this._isNode = false;\n            this._isElectronRenderer = false;\n            this._isWebWorker = false;\n        }\n        Object.defineProperty(Environment.prototype, \"isWindows\", {\n            get: function () {\n                this._detect();\n                return this._isWindows;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Environment.prototype, \"isNode\", {\n            get: function () {\n                this._detect();\n                return this._isNode;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Environment.prototype, \"isElectronRenderer\", {\n            get: function () {\n                this._detect();\n                return this._isElectronRenderer;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Environment.prototype, \"isWebWorker\", {\n            get: function () {\n                this._detect();\n                return this._isWebWorker;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Environment.prototype._detect = function () {\n            if (this._detected) {\n                return;\n            }\n            this._detected = true;\n            this._isWindows = Environment._isWindows();\n            this._isNode = (typeof module !== 'undefined' && !!module.exports);\n            this._isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n            this._isWebWorker = (typeof AMDLoader.global.importScripts === 'function');\n        };\n        Environment._isWindows = function () {\n            if (typeof navigator !== 'undefined') {\n                if (navigator.userAgent && navigator.userAgent.indexOf('Windows') >= 0) {\n                    return true;\n                }\n            }\n            if (typeof process !== 'undefined') {\n                return (process.platform === 'win32');\n            }\n            return false;\n        };\n        return Environment;\n    }());\n    AMDLoader.Environment = Environment;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    var LoaderEvent = /** @class */ (function () {\n        function LoaderEvent(type, detail, timestamp) {\n            this.type = type;\n            this.detail = detail;\n            this.timestamp = timestamp;\n        }\n        return LoaderEvent;\n    }());\n    AMDLoader.LoaderEvent = LoaderEvent;\n    var LoaderEventRecorder = /** @class */ (function () {\n        function LoaderEventRecorder(loaderAvailableTimestamp) {\n            this._events = [new LoaderEvent(1 /* LoaderAvailable */, '', loaderAvailableTimestamp)];\n        }\n        LoaderEventRecorder.prototype.record = function (type, detail) {\n            this._events.push(new LoaderEvent(type, detail, AMDLoader.Utilities.getHighPerformanceTimestamp()));\n        };\n        LoaderEventRecorder.prototype.getEvents = function () {\n            return this._events;\n        };\n        return LoaderEventRecorder;\n    }());\n    AMDLoader.LoaderEventRecorder = LoaderEventRecorder;\n    var NullLoaderEventRecorder = /** @class */ (function () {\n        function NullLoaderEventRecorder() {\n        }\n        NullLoaderEventRecorder.prototype.record = function (type, detail) {\n            // Nothing to do\n        };\n        NullLoaderEventRecorder.prototype.getEvents = function () {\n            return [];\n        };\n        NullLoaderEventRecorder.INSTANCE = new NullLoaderEventRecorder();\n        return NullLoaderEventRecorder;\n    }());\n    AMDLoader.NullLoaderEventRecorder = NullLoaderEventRecorder;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    var Utilities = /** @class */ (function () {\n        function Utilities() {\n        }\n        /**\n         * This method does not take care of / vs \\\n         */\n        Utilities.fileUriToFilePath = function (isWindows, uri) {\n            uri = decodeURI(uri).replace(/%23/g, '#');\n            if (isWindows) {\n                if (/^file:\\/\\/\\//.test(uri)) {\n                    // This is a URI without a hostname => return only the path segment\n                    return uri.substr(8);\n                }\n                if (/^file:\\/\\//.test(uri)) {\n                    return uri.substr(5);\n                }\n            }\n            else {\n                if (/^file:\\/\\//.test(uri)) {\n                    return uri.substr(7);\n                }\n            }\n            // Not sure...\n            return uri;\n        };\n        Utilities.startsWith = function (haystack, needle) {\n            return haystack.length >= needle.length && haystack.substr(0, needle.length) === needle;\n        };\n        Utilities.endsWith = function (haystack, needle) {\n            return haystack.length >= needle.length && haystack.substr(haystack.length - needle.length) === needle;\n        };\n        // only check for \"?\" before \"#\" to ensure that there is a real Query-String\n        Utilities.containsQueryString = function (url) {\n            return /^[^\\#]*\\?/gi.test(url);\n        };\n        /**\n         * Does `url` start with http:// or https:// or file:// or / ?\n         */\n        Utilities.isAbsolutePath = function (url) {\n            return /^((http:\\/\\/)|(https:\\/\\/)|(file:\\/\\/)|(\\/))/.test(url);\n        };\n        Utilities.forEachProperty = function (obj, callback) {\n            if (obj) {\n                var key = void 0;\n                for (key in obj) {\n                    if (obj.hasOwnProperty(key)) {\n                        callback(key, obj[key]);\n                    }\n                }\n            }\n        };\n        Utilities.isEmpty = function (obj) {\n            var isEmpty = true;\n            Utilities.forEachProperty(obj, function () {\n                isEmpty = false;\n            });\n            return isEmpty;\n        };\n        Utilities.recursiveClone = function (obj) {\n            if (!obj || typeof obj !== 'object' || obj instanceof RegExp) {\n                return obj;\n            }\n            if (!Array.isArray(obj) && Object.getPrototypeOf(obj) !== Object.prototype) {\n                return obj;\n            }\n            var result = Array.isArray(obj) ? [] : {};\n            Utilities.forEachProperty(obj, function (key, value) {\n                if (value && typeof value === 'object') {\n                    result[key] = Utilities.recursiveClone(value);\n                }\n                else {\n                    result[key] = value;\n                }\n            });\n            return result;\n        };\n        Utilities.generateAnonymousModule = function () {\n            return '===anonymous' + (Utilities.NEXT_ANONYMOUS_ID++) + '===';\n        };\n        Utilities.isAnonymousModule = function (id) {\n            return Utilities.startsWith(id, '===anonymous');\n        };\n        Utilities.getHighPerformanceTimestamp = function () {\n            if (!this.PERFORMANCE_NOW_PROBED) {\n                this.PERFORMANCE_NOW_PROBED = true;\n                this.HAS_PERFORMANCE_NOW = (AMDLoader.global.performance && typeof AMDLoader.global.performance.now === 'function');\n            }\n            return (this.HAS_PERFORMANCE_NOW ? AMDLoader.global.performance.now() : Date.now());\n        };\n        Utilities.NEXT_ANONYMOUS_ID = 1;\n        Utilities.PERFORMANCE_NOW_PROBED = false;\n        Utilities.HAS_PERFORMANCE_NOW = false;\n        return Utilities;\n    }());\n    AMDLoader.Utilities = Utilities;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    function ensureError(err) {\n        if (err instanceof Error) {\n            return err;\n        }\n        var result = new Error(err.message || String(err) || 'Unknown Error');\n        if (err.stack) {\n            result.stack = err.stack;\n        }\n        return result;\n    }\n    AMDLoader.ensureError = ensureError;\n    ;\n    var ConfigurationOptionsUtil = /** @class */ (function () {\n        function ConfigurationOptionsUtil() {\n        }\n        /**\n         * Ensure configuration options make sense\n         */\n        ConfigurationOptionsUtil.validateConfigurationOptions = function (options) {\n            function defaultOnError(err) {\n                if (err.phase === 'loading') {\n                    console.error('Loading \"' + err.moduleId + '\" failed');\n                    console.error(err);\n                    console.error('Here are the modules that depend on it:');\n                    console.error(err.neededBy);\n                    return;\n                }\n                if (err.phase === 'factory') {\n                    console.error('The factory method of \"' + err.moduleId + '\" has thrown an exception');\n                    console.error(err);\n                    return;\n                }\n            }\n            options = options || {};\n            if (typeof options.baseUrl !== 'string') {\n                options.baseUrl = '';\n            }\n            if (typeof options.isBuild !== 'boolean') {\n                options.isBuild = false;\n            }\n            if (typeof options.paths !== 'object') {\n                options.paths = {};\n            }\n            if (typeof options.config !== 'object') {\n                options.config = {};\n            }\n            if (typeof options.catchError === 'undefined') {\n                options.catchError = false;\n            }\n            if (typeof options.recordStats === 'undefined') {\n                options.recordStats = false;\n            }\n            if (typeof options.urlArgs !== 'string') {\n                options.urlArgs = '';\n            }\n            if (typeof options.onError !== 'function') {\n                options.onError = defaultOnError;\n            }\n            if (!Array.isArray(options.ignoreDuplicateModules)) {\n                options.ignoreDuplicateModules = [];\n            }\n            if (options.baseUrl.length > 0) {\n                if (!AMDLoader.Utilities.endsWith(options.baseUrl, '/')) {\n                    options.baseUrl += '/';\n                }\n            }\n            if (typeof options.cspNonce !== 'string') {\n                options.cspNonce = '';\n            }\n            if (typeof options.preferScriptTags === 'undefined') {\n                options.preferScriptTags = false;\n            }\n            if (!Array.isArray(options.nodeModules)) {\n                options.nodeModules = [];\n            }\n            if (options.nodeCachedData && typeof options.nodeCachedData === 'object') {\n                if (typeof options.nodeCachedData.seed !== 'string') {\n                    options.nodeCachedData.seed = 'seed';\n                }\n                if (typeof options.nodeCachedData.writeDelay !== 'number' || options.nodeCachedData.writeDelay < 0) {\n                    options.nodeCachedData.writeDelay = 1000 * 7;\n                }\n                if (!options.nodeCachedData.path || typeof options.nodeCachedData.path !== 'string') {\n                    var err = ensureError(new Error('INVALID cached data configuration, \\'path\\' MUST be set'));\n                    err.phase = 'configuration';\n                    options.onError(err);\n                    options.nodeCachedData = undefined;\n                }\n            }\n            return options;\n        };\n        ConfigurationOptionsUtil.mergeConfigurationOptions = function (overwrite, base) {\n            if (overwrite === void 0) { overwrite = null; }\n            if (base === void 0) { base = null; }\n            var result = AMDLoader.Utilities.recursiveClone(base || {});\n            // Merge known properties and overwrite the unknown ones\n            AMDLoader.Utilities.forEachProperty(overwrite, function (key, value) {\n                if (key === 'ignoreDuplicateModules' && typeof result.ignoreDuplicateModules !== 'undefined') {\n                    result.ignoreDuplicateModules = result.ignoreDuplicateModules.concat(value);\n                }\n                else if (key === 'paths' && typeof result.paths !== 'undefined') {\n                    AMDLoader.Utilities.forEachProperty(value, function (key2, value2) { return result.paths[key2] = value2; });\n                }\n                else if (key === 'config' && typeof result.config !== 'undefined') {\n                    AMDLoader.Utilities.forEachProperty(value, function (key2, value2) { return result.config[key2] = value2; });\n                }\n                else {\n                    result[key] = AMDLoader.Utilities.recursiveClone(value);\n                }\n            });\n            return ConfigurationOptionsUtil.validateConfigurationOptions(result);\n        };\n        return ConfigurationOptionsUtil;\n    }());\n    AMDLoader.ConfigurationOptionsUtil = ConfigurationOptionsUtil;\n    var Configuration = /** @class */ (function () {\n        function Configuration(env, options) {\n            this._env = env;\n            this.options = ConfigurationOptionsUtil.mergeConfigurationOptions(options);\n            this._createIgnoreDuplicateModulesMap();\n            this._createNodeModulesMap();\n            this._createSortedPathsRules();\n            if (this.options.baseUrl === '') {\n                if (this.options.nodeRequire && this.options.nodeRequire.main && this.options.nodeRequire.main.filename && this._env.isNode) {\n                    var nodeMain = this.options.nodeRequire.main.filename;\n                    var dirnameIndex = Math.max(nodeMain.lastIndexOf('/'), nodeMain.lastIndexOf('\\\\'));\n                    this.options.baseUrl = nodeMain.substring(0, dirnameIndex + 1);\n                }\n                if (this.options.nodeMain && this._env.isNode) {\n                    var nodeMain = this.options.nodeMain;\n                    var dirnameIndex = Math.max(nodeMain.lastIndexOf('/'), nodeMain.lastIndexOf('\\\\'));\n                    this.options.baseUrl = nodeMain.substring(0, dirnameIndex + 1);\n                }\n            }\n        }\n        Configuration.prototype._createIgnoreDuplicateModulesMap = function () {\n            // Build a map out of the ignoreDuplicateModules array\n            this.ignoreDuplicateModulesMap = {};\n            for (var i = 0; i < this.options.ignoreDuplicateModules.length; i++) {\n                this.ignoreDuplicateModulesMap[this.options.ignoreDuplicateModules[i]] = true;\n            }\n        };\n        Configuration.prototype._createNodeModulesMap = function () {\n            // Build a map out of nodeModules array\n            this.nodeModulesMap = Object.create(null);\n            for (var _i = 0, _a = this.options.nodeModules; _i < _a.length; _i++) {\n                var nodeModule = _a[_i];\n                this.nodeModulesMap[nodeModule] = true;\n            }\n        };\n        Configuration.prototype._createSortedPathsRules = function () {\n            var _this = this;\n            // Create an array our of the paths rules, sorted descending by length to\n            // result in a more specific -> less specific order\n            this.sortedPathsRules = [];\n            AMDLoader.Utilities.forEachProperty(this.options.paths, function (from, to) {\n                if (!Array.isArray(to)) {\n                    _this.sortedPathsRules.push({\n                        from: from,\n                        to: [to]\n                    });\n                }\n                else {\n                    _this.sortedPathsRules.push({\n                        from: from,\n                        to: to\n                    });\n                }\n            });\n            this.sortedPathsRules.sort(function (a, b) {\n                return b.from.length - a.from.length;\n            });\n        };\n        /**\n         * Clone current configuration and overwrite options selectively.\n         * @param options The selective options to overwrite with.\n         * @result A new configuration\n         */\n        Configuration.prototype.cloneAndMerge = function (options) {\n            return new Configuration(this._env, ConfigurationOptionsUtil.mergeConfigurationOptions(options, this.options));\n        };\n        /**\n         * Get current options bag. Useful for passing it forward to plugins.\n         */\n        Configuration.prototype.getOptionsLiteral = function () {\n            return this.options;\n        };\n        Configuration.prototype._applyPaths = function (moduleId) {\n            var pathRule;\n            for (var i = 0, len = this.sortedPathsRules.length; i < len; i++) {\n                pathRule = this.sortedPathsRules[i];\n                if (AMDLoader.Utilities.startsWith(moduleId, pathRule.from)) {\n                    var result = [];\n                    for (var j = 0, lenJ = pathRule.to.length; j < lenJ; j++) {\n                        result.push(pathRule.to[j] + moduleId.substr(pathRule.from.length));\n                    }\n                    return result;\n                }\n            }\n            return [moduleId];\n        };\n        Configuration.prototype._addUrlArgsToUrl = function (url) {\n            if (AMDLoader.Utilities.containsQueryString(url)) {\n                return url + '&' + this.options.urlArgs;\n            }\n            else {\n                return url + '?' + this.options.urlArgs;\n            }\n        };\n        Configuration.prototype._addUrlArgsIfNecessaryToUrl = function (url) {\n            if (this.options.urlArgs) {\n                return this._addUrlArgsToUrl(url);\n            }\n            return url;\n        };\n        Configuration.prototype._addUrlArgsIfNecessaryToUrls = function (urls) {\n            if (this.options.urlArgs) {\n                for (var i = 0, len = urls.length; i < len; i++) {\n                    urls[i] = this._addUrlArgsToUrl(urls[i]);\n                }\n            }\n            return urls;\n        };\n        /**\n         * Transform a module id to a location. Appends .js to module ids\n         */\n        Configuration.prototype.moduleIdToPaths = function (moduleId) {\n            var isNodeModule = ((this.nodeModulesMap[moduleId] === true)\n                || (this.options.amdModulesPattern instanceof RegExp && !this.options.amdModulesPattern.test(moduleId)));\n            if (isNodeModule) {\n                // This is a node module...\n                if (this.isBuild()) {\n                    // ...and we are at build time, drop it\n                    return ['empty:'];\n                }\n                else {\n                    // ...and at runtime we create a `shortcut`-path\n                    return ['node|' + moduleId];\n                }\n            }\n            var result = moduleId;\n            var results;\n            if (!AMDLoader.Utilities.endsWith(result, '.js') && !AMDLoader.Utilities.isAbsolutePath(result)) {\n                results = this._applyPaths(result);\n                for (var i = 0, len = results.length; i < len; i++) {\n                    if (this.isBuild() && results[i] === 'empty:') {\n                        continue;\n                    }\n                    if (!AMDLoader.Utilities.isAbsolutePath(results[i])) {\n                        results[i] = this.options.baseUrl + results[i];\n                    }\n                    if (!AMDLoader.Utilities.endsWith(results[i], '.js') && !AMDLoader.Utilities.containsQueryString(results[i])) {\n                        results[i] = results[i] + '.js';\n                    }\n                }\n            }\n            else {\n                if (!AMDLoader.Utilities.endsWith(result, '.js') && !AMDLoader.Utilities.containsQueryString(result)) {\n                    result = result + '.js';\n                }\n                results = [result];\n            }\n            return this._addUrlArgsIfNecessaryToUrls(results);\n        };\n        /**\n         * Transform a module id or url to a location.\n         */\n        Configuration.prototype.requireToUrl = function (url) {\n            var result = url;\n            if (!AMDLoader.Utilities.isAbsolutePath(result)) {\n                result = this._applyPaths(result)[0];\n                if (!AMDLoader.Utilities.isAbsolutePath(result)) {\n                    result = this.options.baseUrl + result;\n                }\n            }\n            return this._addUrlArgsIfNecessaryToUrl(result);\n        };\n        /**\n         * Flag to indicate if current execution is as part of a build.\n         */\n        Configuration.prototype.isBuild = function () {\n            return this.options.isBuild;\n        };\n        /**\n         * Test if module `moduleId` is expected to be defined multiple times\n         */\n        Configuration.prototype.isDuplicateMessageIgnoredFor = function (moduleId) {\n            return this.ignoreDuplicateModulesMap.hasOwnProperty(moduleId);\n        };\n        /**\n         * Get the configuration settings for the provided module id\n         */\n        Configuration.prototype.getConfigForModule = function (moduleId) {\n            if (this.options.config) {\n                return this.options.config[moduleId];\n            }\n        };\n        /**\n         * Should errors be caught when executing module factories?\n         */\n        Configuration.prototype.shouldCatchError = function () {\n            return this.options.catchError;\n        };\n        /**\n         * Should statistics be recorded?\n         */\n        Configuration.prototype.shouldRecordStats = function () {\n            return this.options.recordStats;\n        };\n        /**\n         * Forward an error to the error handler.\n         */\n        Configuration.prototype.onError = function (err) {\n            this.options.onError(err);\n        };\n        return Configuration;\n    }());\n    AMDLoader.Configuration = Configuration;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    /**\n     * Load `scriptSrc` only once (avoid multiple <script> tags)\n     */\n    var OnlyOnceScriptLoader = /** @class */ (function () {\n        function OnlyOnceScriptLoader(env) {\n            this._env = env;\n            this._scriptLoader = null;\n            this._callbackMap = {};\n        }\n        OnlyOnceScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            var _this = this;\n            if (!this._scriptLoader) {\n                if (this._env.isWebWorker) {\n                    this._scriptLoader = new WorkerScriptLoader();\n                }\n                else if (this._env.isElectronRenderer) {\n                    var preferScriptTags = moduleManager.getConfig().getOptionsLiteral().preferScriptTags;\n                    if (preferScriptTags) {\n                        this._scriptLoader = new BrowserScriptLoader();\n                    }\n                    else {\n                        this._scriptLoader = new NodeScriptLoader(this._env);\n                    }\n                }\n                else if (this._env.isNode) {\n                    this._scriptLoader = new NodeScriptLoader(this._env);\n                }\n                else {\n                    this._scriptLoader = new BrowserScriptLoader();\n                }\n            }\n            var scriptCallbacks = {\n                callback: callback,\n                errorback: errorback\n            };\n            if (this._callbackMap.hasOwnProperty(scriptSrc)) {\n                this._callbackMap[scriptSrc].push(scriptCallbacks);\n                return;\n            }\n            this._callbackMap[scriptSrc] = [scriptCallbacks];\n            this._scriptLoader.load(moduleManager, scriptSrc, function () { return _this.triggerCallback(scriptSrc); }, function (err) { return _this.triggerErrorback(scriptSrc, err); });\n        };\n        OnlyOnceScriptLoader.prototype.triggerCallback = function (scriptSrc) {\n            var scriptCallbacks = this._callbackMap[scriptSrc];\n            delete this._callbackMap[scriptSrc];\n            for (var i = 0; i < scriptCallbacks.length; i++) {\n                scriptCallbacks[i].callback();\n            }\n        };\n        OnlyOnceScriptLoader.prototype.triggerErrorback = function (scriptSrc, err) {\n            var scriptCallbacks = this._callbackMap[scriptSrc];\n            delete this._callbackMap[scriptSrc];\n            for (var i = 0; i < scriptCallbacks.length; i++) {\n                scriptCallbacks[i].errorback(err);\n            }\n        };\n        return OnlyOnceScriptLoader;\n    }());\n    var BrowserScriptLoader = /** @class */ (function () {\n        function BrowserScriptLoader() {\n        }\n        /**\n         * Attach load / error listeners to a script element and remove them when either one has fired.\n         * Implemented for browssers supporting HTML5 standard 'load' and 'error' events.\n         */\n        BrowserScriptLoader.prototype.attachListeners = function (script, callback, errorback) {\n            var unbind = function () {\n                script.removeEventListener('load', loadEventListener);\n                script.removeEventListener('error', errorEventListener);\n            };\n            var loadEventListener = function (e) {\n                unbind();\n                callback();\n            };\n            var errorEventListener = function (e) {\n                unbind();\n                errorback(e);\n            };\n            script.addEventListener('load', loadEventListener);\n            script.addEventListener('error', errorEventListener);\n        };\n        BrowserScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            if (/^node\\|/.test(scriptSrc)) {\n                var opts = moduleManager.getConfig().getOptionsLiteral();\n                var nodeRequire = ensureRecordedNodeRequire(moduleManager.getRecorder(), (opts.nodeRequire || AMDLoader.global.nodeRequire));\n                var pieces = scriptSrc.split('|');\n                var moduleExports_1 = null;\n                try {\n                    moduleExports_1 = nodeRequire(pieces[1]);\n                }\n                catch (err) {\n                    errorback(err);\n                    return;\n                }\n                moduleManager.enqueueDefineAnonymousModule([], function () { return moduleExports_1; });\n                callback();\n            }\n            else {\n                var script = document.createElement('script');\n                script.setAttribute('async', 'async');\n                script.setAttribute('type', 'text/javascript');\n                this.attachListeners(script, callback, errorback);\n                var trustedTypesPolicy = moduleManager.getConfig().getOptionsLiteral().trustedTypesPolicy;\n                if (trustedTypesPolicy) {\n                    scriptSrc = trustedTypesPolicy.createScriptURL(scriptSrc);\n                }\n                script.setAttribute('src', scriptSrc);\n                // Propagate CSP nonce to dynamically created script tag.\n                var cspNonce = moduleManager.getConfig().getOptionsLiteral().cspNonce;\n                if (cspNonce) {\n                    script.setAttribute('nonce', cspNonce);\n                }\n                document.getElementsByTagName('head')[0].appendChild(script);\n            }\n        };\n        return BrowserScriptLoader;\n    }());\n    var WorkerScriptLoader = /** @class */ (function () {\n        function WorkerScriptLoader() {\n        }\n        WorkerScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            var trustedTypesPolicy = moduleManager.getConfig().getOptionsLiteral().trustedTypesPolicy;\n            if (trustedTypesPolicy) {\n                scriptSrc = trustedTypesPolicy.createScriptURL(scriptSrc);\n            }\n            try {\n                importScripts(scriptSrc);\n                callback();\n            }\n            catch (e) {\n                errorback(e);\n            }\n        };\n        return WorkerScriptLoader;\n    }());\n    var NodeScriptLoader = /** @class */ (function () {\n        function NodeScriptLoader(env) {\n            this._env = env;\n            this._didInitialize = false;\n            this._didPatchNodeRequire = false;\n        }\n        NodeScriptLoader.prototype._init = function (nodeRequire) {\n            if (this._didInitialize) {\n                return;\n            }\n            this._didInitialize = true;\n            // capture node modules\n            this._fs = nodeRequire('fs');\n            this._vm = nodeRequire('vm');\n            this._path = nodeRequire('path');\n            this._crypto = nodeRequire('crypto');\n        };\n        // patch require-function of nodejs such that we can manually create a script\n        // from cached data. this is done by overriding the `Module._compile` function\n        NodeScriptLoader.prototype._initNodeRequire = function (nodeRequire, moduleManager) {\n            // It is important to check for `nodeCachedData` first and then set `_didPatchNodeRequire`.\n            // That's because `nodeCachedData` is set _after_ calling this for the first time...\n            var nodeCachedData = moduleManager.getConfig().getOptionsLiteral().nodeCachedData;\n            if (!nodeCachedData) {\n                return;\n            }\n            if (this._didPatchNodeRequire) {\n                return;\n            }\n            this._didPatchNodeRequire = true;\n            var that = this;\n            var Module = nodeRequire('module');\n            function makeRequireFunction(mod) {\n                var Module = mod.constructor;\n                var require = function require(path) {\n                    try {\n                        return mod.require(path);\n                    }\n                    finally {\n                        // nothing\n                    }\n                };\n                require.resolve = function resolve(request) {\n                    return Module._resolveFilename(request, mod);\n                };\n                require.main = process.mainModule;\n                require.extensions = Module._extensions;\n                require.cache = Module._cache;\n                return require;\n            }\n            Module.prototype._compile = function (content, filename) {\n                // remove shebang and create wrapper function\n                var scriptSource = Module.wrap(content.replace(/^#!.*/, ''));\n                // create script\n                var recorder = moduleManager.getRecorder();\n                var cachedDataPath = that._getCachedDataPath(nodeCachedData, filename);\n                var options = { filename: filename };\n                var hashData;\n                try {\n                    var data = that._fs.readFileSync(cachedDataPath);\n                    hashData = data.slice(0, 16);\n                    options.cachedData = data.slice(16);\n                    recorder.record(60 /* CachedDataFound */, cachedDataPath);\n                }\n                catch (_e) {\n                    recorder.record(61 /* CachedDataMissed */, cachedDataPath);\n                }\n                var script = new that._vm.Script(scriptSource, options);\n                var compileWrapper = script.runInThisContext(options);\n                // run script\n                var dirname = that._path.dirname(filename);\n                var require = makeRequireFunction(this);\n                var args = [this.exports, require, this, filename, dirname, process, _commonjsGlobal, Buffer];\n                var result = compileWrapper.apply(this.exports, args);\n                // cached data aftermath\n                that._handleCachedData(script, scriptSource, cachedDataPath, !options.cachedData, moduleManager);\n                that._verifyCachedData(script, scriptSource, cachedDataPath, hashData, moduleManager);\n                return result;\n            };\n        };\n        NodeScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            var _this = this;\n            var opts = moduleManager.getConfig().getOptionsLiteral();\n            var nodeRequire = ensureRecordedNodeRequire(moduleManager.getRecorder(), (opts.nodeRequire || AMDLoader.global.nodeRequire));\n            var nodeInstrumenter = (opts.nodeInstrumenter || function (c) { return c; });\n            this._init(nodeRequire);\n            this._initNodeRequire(nodeRequire, moduleManager);\n            var recorder = moduleManager.getRecorder();\n            if (/^node\\|/.test(scriptSrc)) {\n                var pieces = scriptSrc.split('|');\n                var moduleExports_2 = null;\n                try {\n                    moduleExports_2 = nodeRequire(pieces[1]);\n                }\n                catch (err) {\n                    errorback(err);\n                    return;\n                }\n                moduleManager.enqueueDefineAnonymousModule([], function () { return moduleExports_2; });\n                callback();\n            }\n            else {\n                scriptSrc = AMDLoader.Utilities.fileUriToFilePath(this._env.isWindows, scriptSrc);\n                var normalizedScriptSrc_1 = this._path.normalize(scriptSrc);\n                var vmScriptPathOrUri_1 = this._getElectronRendererScriptPathOrUri(normalizedScriptSrc_1);\n                var wantsCachedData_1 = Boolean(opts.nodeCachedData);\n                var cachedDataPath_1 = wantsCachedData_1 ? this._getCachedDataPath(opts.nodeCachedData, scriptSrc) : undefined;\n                this._readSourceAndCachedData(normalizedScriptSrc_1, cachedDataPath_1, recorder, function (err, data, cachedData, hashData) {\n                    if (err) {\n                        errorback(err);\n                        return;\n                    }\n                    var scriptSource;\n                    if (data.charCodeAt(0) === NodeScriptLoader._BOM) {\n                        scriptSource = NodeScriptLoader._PREFIX + data.substring(1) + NodeScriptLoader._SUFFIX;\n                    }\n                    else {\n                        scriptSource = NodeScriptLoader._PREFIX + data + NodeScriptLoader._SUFFIX;\n                    }\n                    scriptSource = nodeInstrumenter(scriptSource, normalizedScriptSrc_1);\n                    var scriptOpts = { filename: vmScriptPathOrUri_1, cachedData: cachedData };\n                    var script = _this._createAndEvalScript(moduleManager, scriptSource, scriptOpts, callback, errorback);\n                    _this._handleCachedData(script, scriptSource, cachedDataPath_1, wantsCachedData_1 && !cachedData, moduleManager);\n                    _this._verifyCachedData(script, scriptSource, cachedDataPath_1, hashData, moduleManager);\n                });\n            }\n        };\n        NodeScriptLoader.prototype._createAndEvalScript = function (moduleManager, contents, options, callback, errorback) {\n            var recorder = moduleManager.getRecorder();\n            recorder.record(31 /* NodeBeginEvaluatingScript */, options.filename);\n            var script = new this._vm.Script(contents, options);\n            var ret = script.runInThisContext(options);\n            var globalDefineFunc = moduleManager.getGlobalAMDDefineFunc();\n            var receivedDefineCall = false;\n            var localDefineFunc = function () {\n                receivedDefineCall = true;\n                return globalDefineFunc.apply(null, arguments);\n            };\n            localDefineFunc.amd = globalDefineFunc.amd;\n            ret.call(AMDLoader.global, moduleManager.getGlobalAMDRequireFunc(), localDefineFunc, options.filename, this._path.dirname(options.filename));\n            recorder.record(32 /* NodeEndEvaluatingScript */, options.filename);\n            if (receivedDefineCall) {\n                callback();\n            }\n            else {\n                errorback(new Error(\"Didn't receive define call in \" + options.filename + \"!\"));\n            }\n            return script;\n        };\n        NodeScriptLoader.prototype._getElectronRendererScriptPathOrUri = function (path) {\n            if (!this._env.isElectronRenderer) {\n                return path;\n            }\n            var driveLetterMatch = path.match(/^([a-z])\\:(.*)/i);\n            if (driveLetterMatch) {\n                // windows\n                return \"file:///\" + (driveLetterMatch[1].toUpperCase() + ':' + driveLetterMatch[2]).replace(/\\\\/g, '/');\n            }\n            else {\n                // nix\n                return \"file://\" + path;\n            }\n        };\n        NodeScriptLoader.prototype._getCachedDataPath = function (config, filename) {\n            var hash = this._crypto.createHash('md5').update(filename, 'utf8').update(config.seed, 'utf8').digest('hex');\n            var basename = this._path.basename(filename).replace(/\\.js$/, '');\n            return this._path.join(config.path, basename + \"-\" + hash + \".code\");\n        };\n        NodeScriptLoader.prototype._handleCachedData = function (script, scriptSource, cachedDataPath, createCachedData, moduleManager) {\n            var _this = this;\n            if (script.cachedDataRejected) {\n                // cached data got rejected -> delete and re-create\n                this._fs.unlink(cachedDataPath, function (err) {\n                    moduleManager.getRecorder().record(62 /* CachedDataRejected */, cachedDataPath);\n                    _this._createAndWriteCachedData(script, scriptSource, cachedDataPath, moduleManager);\n                    if (err) {\n                        moduleManager.getConfig().onError(err);\n                    }\n                });\n            }\n            else if (createCachedData) {\n                // no cached data, but wanted\n                this._createAndWriteCachedData(script, scriptSource, cachedDataPath, moduleManager);\n            }\n        };\n        // Cached data format: | SOURCE_HASH | V8_CACHED_DATA |\n        // -SOURCE_HASH is the md5 hash of the JS source (always 16 bytes)\n        // -V8_CACHED_DATA is what v8 produces\n        NodeScriptLoader.prototype._createAndWriteCachedData = function (script, scriptSource, cachedDataPath, moduleManager) {\n            var _this = this;\n            var timeout = Math.ceil(moduleManager.getConfig().getOptionsLiteral().nodeCachedData.writeDelay * (1 + Math.random()));\n            var lastSize = -1;\n            var iteration = 0;\n            var hashData = undefined;\n            var createLoop = function () {\n                setTimeout(function () {\n                    if (!hashData) {\n                        hashData = _this._crypto.createHash('md5').update(scriptSource, 'utf8').digest();\n                    }\n                    var cachedData = script.createCachedData();\n                    if (cachedData.length === 0 || cachedData.length === lastSize || iteration >= 5) {\n                        // done\n                        return;\n                    }\n                    if (cachedData.length < lastSize) {\n                        // less data than before: skip, try again next round\n                        createLoop();\n                        return;\n                    }\n                    lastSize = cachedData.length;\n                    _this._fs.writeFile(cachedDataPath, Buffer.concat([hashData, cachedData]), function (err) {\n                        if (err) {\n                            moduleManager.getConfig().onError(err);\n                        }\n                        moduleManager.getRecorder().record(63 /* CachedDataCreated */, cachedDataPath);\n                        createLoop();\n                    });\n                }, timeout * (Math.pow(4, iteration++)));\n            };\n            // with some delay (`timeout`) create cached data\n            // and repeat that (with backoff delay) until the\n            // data seems to be not changing anymore\n            createLoop();\n        };\n        NodeScriptLoader.prototype._readSourceAndCachedData = function (sourcePath, cachedDataPath, recorder, callback) {\n            if (!cachedDataPath) {\n                // no cached data case\n                this._fs.readFile(sourcePath, { encoding: 'utf8' }, callback);\n            }\n            else {\n                // cached data case: read both files in parallel\n                var source_1 = undefined;\n                var cachedData_1 = undefined;\n                var hashData_1 = undefined;\n                var steps_1 = 2;\n                var step_1 = function (err) {\n                    if (err) {\n                        callback(err);\n                    }\n                    else if (--steps_1 === 0) {\n                        callback(undefined, source_1, cachedData_1, hashData_1);\n                    }\n                };\n                this._fs.readFile(sourcePath, { encoding: 'utf8' }, function (err, data) {\n                    source_1 = data;\n                    step_1(err);\n                });\n                this._fs.readFile(cachedDataPath, function (err, data) {\n                    if (!err && data && data.length > 0) {\n                        hashData_1 = data.slice(0, 16);\n                        cachedData_1 = data.slice(16);\n                        recorder.record(60 /* CachedDataFound */, cachedDataPath);\n                    }\n                    else {\n                        recorder.record(61 /* CachedDataMissed */, cachedDataPath);\n                    }\n                    step_1(); // ignored: cached data is optional\n                });\n            }\n        };\n        NodeScriptLoader.prototype._verifyCachedData = function (script, scriptSource, cachedDataPath, hashData, moduleManager) {\n            var _this = this;\n            if (!hashData) {\n                // nothing to do\n                return;\n            }\n            if (script.cachedDataRejected) {\n                // invalid anyways\n                return;\n            }\n            setTimeout(function () {\n                // check source hash - the contract is that file paths change when file content\n                // change (e.g use the commit or version id as cache path). this check is\n                // for violations of this contract.\n                var hashDataNow = _this._crypto.createHash('md5').update(scriptSource, 'utf8').digest();\n                if (!hashData.equals(hashDataNow)) {\n                    moduleManager.getConfig().onError(new Error(\"FAILED TO VERIFY CACHED DATA, deleting stale '\" + cachedDataPath + \"' now, but a RESTART IS REQUIRED\"));\n                    _this._fs.unlink(cachedDataPath, function (err) {\n                        if (err) {\n                            moduleManager.getConfig().onError(err);\n                        }\n                    });\n                }\n            }, Math.ceil(5000 * (1 + Math.random())));\n        };\n        NodeScriptLoader._BOM = 0xFEFF;\n        NodeScriptLoader._PREFIX = '(function (require, define, __filename, __dirname) { ';\n        NodeScriptLoader._SUFFIX = '\\n});';\n        return NodeScriptLoader;\n    }());\n    function ensureRecordedNodeRequire(recorder, _nodeRequire) {\n        if (_nodeRequire.__$__isRecorded) {\n            // it is already recorded\n            return _nodeRequire;\n        }\n        var nodeRequire = function nodeRequire(what) {\n            recorder.record(33 /* NodeBeginNativeRequire */, what);\n            try {\n                return _nodeRequire(what);\n            }\n            finally {\n                recorder.record(34 /* NodeEndNativeRequire */, what);\n            }\n        };\n        nodeRequire.__$__isRecorded = true;\n        return nodeRequire;\n    }\n    AMDLoader.ensureRecordedNodeRequire = ensureRecordedNodeRequire;\n    function createScriptLoader(env) {\n        return new OnlyOnceScriptLoader(env);\n    }\n    AMDLoader.createScriptLoader = createScriptLoader;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    // ------------------------------------------------------------------------\n    // ModuleIdResolver\n    var ModuleIdResolver = /** @class */ (function () {\n        function ModuleIdResolver(fromModuleId) {\n            var lastSlash = fromModuleId.lastIndexOf('/');\n            if (lastSlash !== -1) {\n                this.fromModulePath = fromModuleId.substr(0, lastSlash + 1);\n            }\n            else {\n                this.fromModulePath = '';\n            }\n        }\n        /**\n         * Normalize 'a/../name' to 'name', etc.\n         */\n        ModuleIdResolver._normalizeModuleId = function (moduleId) {\n            var r = moduleId, pattern;\n            // replace /./ => /\n            pattern = /\\/\\.\\//;\n            while (pattern.test(r)) {\n                r = r.replace(pattern, '/');\n            }\n            // replace ^./ => nothing\n            r = r.replace(/^\\.\\//g, '');\n            // replace /aa/../ => / (BUT IGNORE /../../)\n            pattern = /\\/(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//;\n            while (pattern.test(r)) {\n                r = r.replace(pattern, '/');\n            }\n            // replace ^aa/../ => nothing (BUT IGNORE ../../)\n            r = r.replace(/^(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//, '');\n            return r;\n        };\n        /**\n         * Resolve relative module ids\n         */\n        ModuleIdResolver.prototype.resolveModule = function (moduleId) {\n            var result = moduleId;\n            if (!AMDLoader.Utilities.isAbsolutePath(result)) {\n                if (AMDLoader.Utilities.startsWith(result, './') || AMDLoader.Utilities.startsWith(result, '../')) {\n                    result = ModuleIdResolver._normalizeModuleId(this.fromModulePath + result);\n                }\n            }\n            return result;\n        };\n        ModuleIdResolver.ROOT = new ModuleIdResolver('');\n        return ModuleIdResolver;\n    }());\n    AMDLoader.ModuleIdResolver = ModuleIdResolver;\n    // ------------------------------------------------------------------------\n    // Module\n    var Module = /** @class */ (function () {\n        function Module(id, strId, dependencies, callback, errorback, moduleIdResolver) {\n            this.id = id;\n            this.strId = strId;\n            this.dependencies = dependencies;\n            this._callback = callback;\n            this._errorback = errorback;\n            this.moduleIdResolver = moduleIdResolver;\n            this.exports = {};\n            this.error = null;\n            this.exportsPassedIn = false;\n            this.unresolvedDependenciesCount = this.dependencies.length;\n            this._isComplete = false;\n        }\n        Module._safeInvokeFunction = function (callback, args) {\n            try {\n                return {\n                    returnedValue: callback.apply(AMDLoader.global, args),\n                    producedError: null\n                };\n            }\n            catch (e) {\n                return {\n                    returnedValue: null,\n                    producedError: e\n                };\n            }\n        };\n        Module._invokeFactory = function (config, strModuleId, callback, dependenciesValues) {\n            if (config.isBuild() && !AMDLoader.Utilities.isAnonymousModule(strModuleId)) {\n                return {\n                    returnedValue: null,\n                    producedError: null\n                };\n            }\n            if (config.shouldCatchError()) {\n                return this._safeInvokeFunction(callback, dependenciesValues);\n            }\n            return {\n                returnedValue: callback.apply(AMDLoader.global, dependenciesValues),\n                producedError: null\n            };\n        };\n        Module.prototype.complete = function (recorder, config, dependenciesValues) {\n            this._isComplete = true;\n            var producedError = null;\n            if (this._callback) {\n                if (typeof this._callback === 'function') {\n                    recorder.record(21 /* BeginInvokeFactory */, this.strId);\n                    var r = Module._invokeFactory(config, this.strId, this._callback, dependenciesValues);\n                    producedError = r.producedError;\n                    recorder.record(22 /* EndInvokeFactory */, this.strId);\n                    if (!producedError && typeof r.returnedValue !== 'undefined' && (!this.exportsPassedIn || AMDLoader.Utilities.isEmpty(this.exports))) {\n                        this.exports = r.returnedValue;\n                    }\n                }\n                else {\n                    this.exports = this._callback;\n                }\n            }\n            if (producedError) {\n                var err = AMDLoader.ensureError(producedError);\n                err.phase = 'factory';\n                err.moduleId = this.strId;\n                this.error = err;\n                config.onError(err);\n            }\n            this.dependencies = null;\n            this._callback = null;\n            this._errorback = null;\n            this.moduleIdResolver = null;\n        };\n        /**\n         * One of the direct dependencies or a transitive dependency has failed to load.\n         */\n        Module.prototype.onDependencyError = function (err) {\n            this._isComplete = true;\n            this.error = err;\n            if (this._errorback) {\n                this._errorback(err);\n                return true;\n            }\n            return false;\n        };\n        /**\n         * Is the current module complete?\n         */\n        Module.prototype.isComplete = function () {\n            return this._isComplete;\n        };\n        return Module;\n    }());\n    AMDLoader.Module = Module;\n    var ModuleIdProvider = /** @class */ (function () {\n        function ModuleIdProvider() {\n            this._nextId = 0;\n            this._strModuleIdToIntModuleId = new Map();\n            this._intModuleIdToStrModuleId = [];\n            // Ensure values 0, 1, 2 are assigned accordingly with ModuleId\n            this.getModuleId('exports');\n            this.getModuleId('module');\n            this.getModuleId('require');\n        }\n        ModuleIdProvider.prototype.getMaxModuleId = function () {\n            return this._nextId;\n        };\n        ModuleIdProvider.prototype.getModuleId = function (strModuleId) {\n            var id = this._strModuleIdToIntModuleId.get(strModuleId);\n            if (typeof id === 'undefined') {\n                id = this._nextId++;\n                this._strModuleIdToIntModuleId.set(strModuleId, id);\n                this._intModuleIdToStrModuleId[id] = strModuleId;\n            }\n            return id;\n        };\n        ModuleIdProvider.prototype.getStrModuleId = function (moduleId) {\n            return this._intModuleIdToStrModuleId[moduleId];\n        };\n        return ModuleIdProvider;\n    }());\n    var RegularDependency = /** @class */ (function () {\n        function RegularDependency(id) {\n            this.id = id;\n        }\n        RegularDependency.EXPORTS = new RegularDependency(0 /* EXPORTS */);\n        RegularDependency.MODULE = new RegularDependency(1 /* MODULE */);\n        RegularDependency.REQUIRE = new RegularDependency(2 /* REQUIRE */);\n        return RegularDependency;\n    }());\n    AMDLoader.RegularDependency = RegularDependency;\n    var PluginDependency = /** @class */ (function () {\n        function PluginDependency(id, pluginId, pluginParam) {\n            this.id = id;\n            this.pluginId = pluginId;\n            this.pluginParam = pluginParam;\n        }\n        return PluginDependency;\n    }());\n    AMDLoader.PluginDependency = PluginDependency;\n    var ModuleManager = /** @class */ (function () {\n        function ModuleManager(env, scriptLoader, defineFunc, requireFunc, loaderAvailableTimestamp) {\n            if (loaderAvailableTimestamp === void 0) { loaderAvailableTimestamp = 0; }\n            this._env = env;\n            this._scriptLoader = scriptLoader;\n            this._loaderAvailableTimestamp = loaderAvailableTimestamp;\n            this._defineFunc = defineFunc;\n            this._requireFunc = requireFunc;\n            this._moduleIdProvider = new ModuleIdProvider();\n            this._config = new AMDLoader.Configuration(this._env);\n            this._modules2 = [];\n            this._knownModules2 = [];\n            this._inverseDependencies2 = [];\n            this._inversePluginDependencies2 = new Map();\n            this._currentAnnonymousDefineCall = null;\n            this._recorder = null;\n            this._buildInfoPath = [];\n            this._buildInfoDefineStack = [];\n            this._buildInfoDependencies = [];\n        }\n        ModuleManager.prototype.reset = function () {\n            return new ModuleManager(this._env, this._scriptLoader, this._defineFunc, this._requireFunc, this._loaderAvailableTimestamp);\n        };\n        ModuleManager.prototype.getGlobalAMDDefineFunc = function () {\n            return this._defineFunc;\n        };\n        ModuleManager.prototype.getGlobalAMDRequireFunc = function () {\n            return this._requireFunc;\n        };\n        ModuleManager._findRelevantLocationInStack = function (needle, stack) {\n            var normalize = function (str) { return str.replace(/\\\\/g, '/'); };\n            var normalizedPath = normalize(needle);\n            var stackPieces = stack.split(/\\n/);\n            for (var i = 0; i < stackPieces.length; i++) {\n                var m = stackPieces[i].match(/(.*):(\\d+):(\\d+)\\)?$/);\n                if (m) {\n                    var stackPath = m[1];\n                    var stackLine = m[2];\n                    var stackColumn = m[3];\n                    var trimPathOffset = Math.max(stackPath.lastIndexOf(' ') + 1, stackPath.lastIndexOf('(') + 1);\n                    stackPath = stackPath.substr(trimPathOffset);\n                    stackPath = normalize(stackPath);\n                    if (stackPath === normalizedPath) {\n                        var r = {\n                            line: parseInt(stackLine, 10),\n                            col: parseInt(stackColumn, 10)\n                        };\n                        if (r.line === 1) {\n                            r.col -= '(function (require, define, __filename, __dirname) { '.length;\n                        }\n                        return r;\n                    }\n                }\n            }\n            throw new Error('Could not correlate define call site for needle ' + needle);\n        };\n        ModuleManager.prototype.getBuildInfo = function () {\n            if (!this._config.isBuild()) {\n                return null;\n            }\n            var result = [], resultLen = 0;\n            for (var i = 0, len = this._modules2.length; i < len; i++) {\n                var m = this._modules2[i];\n                if (!m) {\n                    continue;\n                }\n                var location_1 = this._buildInfoPath[m.id] || null;\n                var defineStack = this._buildInfoDefineStack[m.id] || null;\n                var dependencies = this._buildInfoDependencies[m.id];\n                result[resultLen++] = {\n                    id: m.strId,\n                    path: location_1,\n                    defineLocation: (location_1 && defineStack ? ModuleManager._findRelevantLocationInStack(location_1, defineStack) : null),\n                    dependencies: dependencies,\n                    shim: null,\n                    exports: m.exports\n                };\n            }\n            return result;\n        };\n        ModuleManager.prototype.getRecorder = function () {\n            if (!this._recorder) {\n                if (this._config.shouldRecordStats()) {\n                    this._recorder = new AMDLoader.LoaderEventRecorder(this._loaderAvailableTimestamp);\n                }\n                else {\n                    this._recorder = AMDLoader.NullLoaderEventRecorder.INSTANCE;\n                }\n            }\n            return this._recorder;\n        };\n        ModuleManager.prototype.getLoaderEvents = function () {\n            return this.getRecorder().getEvents();\n        };\n        /**\n         * Defines an anonymous module (without an id). Its name will be resolved as we receive a callback from the scriptLoader.\n         * @param dependecies @see defineModule\n         * @param callback @see defineModule\n         */\n        ModuleManager.prototype.enqueueDefineAnonymousModule = function (dependencies, callback) {\n            if (this._currentAnnonymousDefineCall !== null) {\n                throw new Error('Can only have one anonymous define call per script file');\n            }\n            var stack = null;\n            if (this._config.isBuild()) {\n                stack = new Error('StackLocation').stack || null;\n            }\n            this._currentAnnonymousDefineCall = {\n                stack: stack,\n                dependencies: dependencies,\n                callback: callback\n            };\n        };\n        /**\n         * Creates a module and stores it in _modules. The manager will immediately begin resolving its dependencies.\n         * @param strModuleId An unique and absolute id of the module. This must not collide with another module's id\n         * @param dependencies An array with the dependencies of the module. Special keys are: \"require\", \"exports\" and \"module\"\n         * @param callback if callback is a function, it will be called with the resolved dependencies. if callback is an object, it will be considered as the exports of the module.\n         */\n        ModuleManager.prototype.defineModule = function (strModuleId, dependencies, callback, errorback, stack, moduleIdResolver) {\n            var _this = this;\n            if (moduleIdResolver === void 0) { moduleIdResolver = new ModuleIdResolver(strModuleId); }\n            var moduleId = this._moduleIdProvider.getModuleId(strModuleId);\n            if (this._modules2[moduleId]) {\n                if (!this._config.isDuplicateMessageIgnoredFor(strModuleId)) {\n                    console.warn('Duplicate definition of module \\'' + strModuleId + '\\'');\n                }\n                // Super important! Completely ignore duplicate module definition\n                return;\n            }\n            var m = new Module(moduleId, strModuleId, this._normalizeDependencies(dependencies, moduleIdResolver), callback, errorback, moduleIdResolver);\n            this._modules2[moduleId] = m;\n            if (this._config.isBuild()) {\n                this._buildInfoDefineStack[moduleId] = stack;\n                this._buildInfoDependencies[moduleId] = (m.dependencies || []).map(function (dep) { return _this._moduleIdProvider.getStrModuleId(dep.id); });\n            }\n            // Resolving of dependencies is immediate (not in a timeout). If there's a need to support a packer that concatenates in an\n            // unordered manner, in order to finish processing the file, execute the following method in a timeout\n            this._resolve(m);\n        };\n        ModuleManager.prototype._normalizeDependency = function (dependency, moduleIdResolver) {\n            if (dependency === 'exports') {\n                return RegularDependency.EXPORTS;\n            }\n            if (dependency === 'module') {\n                return RegularDependency.MODULE;\n            }\n            if (dependency === 'require') {\n                return RegularDependency.REQUIRE;\n            }\n            // Normalize dependency and then request it from the manager\n            var bangIndex = dependency.indexOf('!');\n            if (bangIndex >= 0) {\n                var strPluginId = moduleIdResolver.resolveModule(dependency.substr(0, bangIndex));\n                var pluginParam = moduleIdResolver.resolveModule(dependency.substr(bangIndex + 1));\n                var dependencyId = this._moduleIdProvider.getModuleId(strPluginId + '!' + pluginParam);\n                var pluginId = this._moduleIdProvider.getModuleId(strPluginId);\n                return new PluginDependency(dependencyId, pluginId, pluginParam);\n            }\n            return new RegularDependency(this._moduleIdProvider.getModuleId(moduleIdResolver.resolveModule(dependency)));\n        };\n        ModuleManager.prototype._normalizeDependencies = function (dependencies, moduleIdResolver) {\n            var result = [], resultLen = 0;\n            for (var i = 0, len = dependencies.length; i < len; i++) {\n                result[resultLen++] = this._normalizeDependency(dependencies[i], moduleIdResolver);\n            }\n            return result;\n        };\n        ModuleManager.prototype._relativeRequire = function (moduleIdResolver, dependencies, callback, errorback) {\n            if (typeof dependencies === 'string') {\n                return this.synchronousRequire(dependencies, moduleIdResolver);\n            }\n            this.defineModule(AMDLoader.Utilities.generateAnonymousModule(), dependencies, callback, errorback, null, moduleIdResolver);\n        };\n        /**\n         * Require synchronously a module by its absolute id. If the module is not loaded, an exception will be thrown.\n         * @param id The unique and absolute id of the required module\n         * @return The exports of module 'id'\n         */\n        ModuleManager.prototype.synchronousRequire = function (_strModuleId, moduleIdResolver) {\n            if (moduleIdResolver === void 0) { moduleIdResolver = new ModuleIdResolver(_strModuleId); }\n            var dependency = this._normalizeDependency(_strModuleId, moduleIdResolver);\n            var m = this._modules2[dependency.id];\n            if (!m) {\n                throw new Error('Check dependency list! Synchronous require cannot resolve module \\'' + _strModuleId + '\\'. This is the first mention of this module!');\n            }\n            if (!m.isComplete()) {\n                throw new Error('Check dependency list! Synchronous require cannot resolve module \\'' + _strModuleId + '\\'. This module has not been resolved completely yet.');\n            }\n            if (m.error) {\n                throw m.error;\n            }\n            return m.exports;\n        };\n        ModuleManager.prototype.configure = function (params, shouldOverwrite) {\n            var oldShouldRecordStats = this._config.shouldRecordStats();\n            if (shouldOverwrite) {\n                this._config = new AMDLoader.Configuration(this._env, params);\n            }\n            else {\n                this._config = this._config.cloneAndMerge(params);\n            }\n            if (this._config.shouldRecordStats() && !oldShouldRecordStats) {\n                this._recorder = null;\n            }\n        };\n        ModuleManager.prototype.getConfig = function () {\n            return this._config;\n        };\n        /**\n         * Callback from the scriptLoader when a module has been loaded.\n         * This means its code is available and has been executed.\n         */\n        ModuleManager.prototype._onLoad = function (moduleId) {\n            if (this._currentAnnonymousDefineCall !== null) {\n                var defineCall = this._currentAnnonymousDefineCall;\n                this._currentAnnonymousDefineCall = null;\n                // Hit an anonymous define call\n                this.defineModule(this._moduleIdProvider.getStrModuleId(moduleId), defineCall.dependencies, defineCall.callback, null, defineCall.stack);\n            }\n        };\n        ModuleManager.prototype._createLoadError = function (moduleId, _err) {\n            var _this = this;\n            var strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\n            var neededBy = (this._inverseDependencies2[moduleId] || []).map(function (intModuleId) { return _this._moduleIdProvider.getStrModuleId(intModuleId); });\n            var err = AMDLoader.ensureError(_err);\n            err.phase = 'loading';\n            err.moduleId = strModuleId;\n            err.neededBy = neededBy;\n            return err;\n        };\n        /**\n         * Callback from the scriptLoader when a module hasn't been loaded.\n         * This means that the script was not found (e.g. 404) or there was an error in the script.\n         */\n        ModuleManager.prototype._onLoadError = function (moduleId, err) {\n            var error = this._createLoadError(moduleId, err);\n            if (!this._modules2[moduleId]) {\n                this._modules2[moduleId] = new Module(moduleId, this._moduleIdProvider.getStrModuleId(moduleId), [], function () { }, function () { }, null);\n            }\n            // Find any 'local' error handlers, walk the entire chain of inverse dependencies if necessary.\n            var seenModuleId = [];\n            for (var i = 0, len = this._moduleIdProvider.getMaxModuleId(); i < len; i++) {\n                seenModuleId[i] = false;\n            }\n            var someoneNotified = false;\n            var queue = [];\n            queue.push(moduleId);\n            seenModuleId[moduleId] = true;\n            while (queue.length > 0) {\n                var queueElement = queue.shift();\n                var m = this._modules2[queueElement];\n                if (m) {\n                    someoneNotified = m.onDependencyError(error) || someoneNotified;\n                }\n                var inverseDeps = this._inverseDependencies2[queueElement];\n                if (inverseDeps) {\n                    for (var i = 0, len = inverseDeps.length; i < len; i++) {\n                        var inverseDep = inverseDeps[i];\n                        if (!seenModuleId[inverseDep]) {\n                            queue.push(inverseDep);\n                            seenModuleId[inverseDep] = true;\n                        }\n                    }\n                }\n            }\n            if (!someoneNotified) {\n                this._config.onError(error);\n            }\n        };\n        /**\n         * Walks (recursively) the dependencies of 'from' in search of 'to'.\n         * Returns true if there is such a path or false otherwise.\n         * @param from Module id to start at\n         * @param to Module id to look for\n         */\n        ModuleManager.prototype._hasDependencyPath = function (fromId, toId) {\n            var from = this._modules2[fromId];\n            if (!from) {\n                return false;\n            }\n            var inQueue = [];\n            for (var i = 0, len = this._moduleIdProvider.getMaxModuleId(); i < len; i++) {\n                inQueue[i] = false;\n            }\n            var queue = [];\n            // Insert 'from' in queue\n            queue.push(from);\n            inQueue[fromId] = true;\n            while (queue.length > 0) {\n                // Pop first inserted element of queue\n                var element = queue.shift();\n                var dependencies = element.dependencies;\n                if (dependencies) {\n                    // Walk the element's dependencies\n                    for (var i = 0, len = dependencies.length; i < len; i++) {\n                        var dependency = dependencies[i];\n                        if (dependency.id === toId) {\n                            // There is a path to 'to'\n                            return true;\n                        }\n                        var dependencyModule = this._modules2[dependency.id];\n                        if (dependencyModule && !inQueue[dependency.id]) {\n                            // Insert 'dependency' in queue\n                            inQueue[dependency.id] = true;\n                            queue.push(dependencyModule);\n                        }\n                    }\n                }\n            }\n            // There is no path to 'to'\n            return false;\n        };\n        /**\n         * Walks (recursively) the dependencies of 'from' in search of 'to'.\n         * Returns cycle as array.\n         * @param from Module id to start at\n         * @param to Module id to look for\n         */\n        ModuleManager.prototype._findCyclePath = function (fromId, toId, depth) {\n            if (fromId === toId || depth === 50) {\n                return [fromId];\n            }\n            var from = this._modules2[fromId];\n            if (!from) {\n                return null;\n            }\n            // Walk the element's dependencies\n            var dependencies = from.dependencies;\n            if (dependencies) {\n                for (var i = 0, len = dependencies.length; i < len; i++) {\n                    var path = this._findCyclePath(dependencies[i].id, toId, depth + 1);\n                    if (path !== null) {\n                        path.push(fromId);\n                        return path;\n                    }\n                }\n            }\n            return null;\n        };\n        /**\n         * Create the local 'require' that is passed into modules\n         */\n        ModuleManager.prototype._createRequire = function (moduleIdResolver) {\n            var _this = this;\n            var result = (function (dependencies, callback, errorback) {\n                return _this._relativeRequire(moduleIdResolver, dependencies, callback, errorback);\n            });\n            result.toUrl = function (id) {\n                return _this._config.requireToUrl(moduleIdResolver.resolveModule(id));\n            };\n            result.getStats = function () {\n                return _this.getLoaderEvents();\n            };\n            result.config = function (params, shouldOverwrite) {\n                if (shouldOverwrite === void 0) { shouldOverwrite = false; }\n                _this.configure(params, shouldOverwrite);\n            };\n            result.__$__nodeRequire = AMDLoader.global.nodeRequire;\n            return result;\n        };\n        ModuleManager.prototype._loadModule = function (moduleId) {\n            var _this = this;\n            if (this._modules2[moduleId] || this._knownModules2[moduleId]) {\n                // known module\n                return;\n            }\n            this._knownModules2[moduleId] = true;\n            var strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\n            var paths = this._config.moduleIdToPaths(strModuleId);\n            var scopedPackageRegex = /^@[^\\/]+\\/[^\\/]+$/; // matches @scope/package-name\n            if (this._env.isNode && (strModuleId.indexOf('/') === -1 || scopedPackageRegex.test(strModuleId))) {\n                paths.push('node|' + strModuleId);\n            }\n            var lastPathIndex = -1;\n            var loadNextPath = function (err) {\n                lastPathIndex++;\n                if (lastPathIndex >= paths.length) {\n                    // No more paths to try\n                    _this._onLoadError(moduleId, err);\n                }\n                else {\n                    var currentPath_1 = paths[lastPathIndex];\n                    var recorder_1 = _this.getRecorder();\n                    if (_this._config.isBuild() && currentPath_1 === 'empty:') {\n                        _this._buildInfoPath[moduleId] = currentPath_1;\n                        _this.defineModule(_this._moduleIdProvider.getStrModuleId(moduleId), [], null, null, null);\n                        _this._onLoad(moduleId);\n                        return;\n                    }\n                    recorder_1.record(10 /* BeginLoadingScript */, currentPath_1);\n                    _this._scriptLoader.load(_this, currentPath_1, function () {\n                        if (_this._config.isBuild()) {\n                            _this._buildInfoPath[moduleId] = currentPath_1;\n                        }\n                        recorder_1.record(11 /* EndLoadingScriptOK */, currentPath_1);\n                        _this._onLoad(moduleId);\n                    }, function (err) {\n                        recorder_1.record(12 /* EndLoadingScriptError */, currentPath_1);\n                        loadNextPath(err);\n                    });\n                }\n            };\n            loadNextPath(null);\n        };\n        /**\n         * Resolve a plugin dependency with the plugin loaded & complete\n         * @param module The module that has this dependency\n         * @param pluginDependency The semi-normalized dependency that appears in the module. e.g. 'vs/css!./mycssfile'. Only the plugin part (before !) is normalized\n         * @param plugin The plugin (what the plugin exports)\n         */\n        ModuleManager.prototype._loadPluginDependency = function (plugin, pluginDependency) {\n            var _this = this;\n            if (this._modules2[pluginDependency.id] || this._knownModules2[pluginDependency.id]) {\n                // known module\n                return;\n            }\n            this._knownModules2[pluginDependency.id] = true;\n            // Delegate the loading of the resource to the plugin\n            var load = (function (value) {\n                _this.defineModule(_this._moduleIdProvider.getStrModuleId(pluginDependency.id), [], value, null, null);\n            });\n            load.error = function (err) {\n                _this._config.onError(_this._createLoadError(pluginDependency.id, err));\n            };\n            plugin.load(pluginDependency.pluginParam, this._createRequire(ModuleIdResolver.ROOT), load, this._config.getOptionsLiteral());\n        };\n        /**\n         * Examine the dependencies of module 'module' and resolve them as needed.\n         */\n        ModuleManager.prototype._resolve = function (module) {\n            var _this = this;\n            var dependencies = module.dependencies;\n            if (dependencies) {\n                for (var i = 0, len = dependencies.length; i < len; i++) {\n                    var dependency = dependencies[i];\n                    if (dependency === RegularDependency.EXPORTS) {\n                        module.exportsPassedIn = true;\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    if (dependency === RegularDependency.MODULE) {\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    if (dependency === RegularDependency.REQUIRE) {\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    var dependencyModule = this._modules2[dependency.id];\n                    if (dependencyModule && dependencyModule.isComplete()) {\n                        if (dependencyModule.error) {\n                            module.onDependencyError(dependencyModule.error);\n                            return;\n                        }\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    if (this._hasDependencyPath(dependency.id, module.id)) {\n                        console.warn('There is a dependency cycle between \\'' + this._moduleIdProvider.getStrModuleId(dependency.id) + '\\' and \\'' + this._moduleIdProvider.getStrModuleId(module.id) + '\\'. The cyclic path follows:');\n                        var cyclePath = this._findCyclePath(dependency.id, module.id, 0) || [];\n                        cyclePath.reverse();\n                        cyclePath.push(dependency.id);\n                        console.warn(cyclePath.map(function (id) { return _this._moduleIdProvider.getStrModuleId(id); }).join(' => \\n'));\n                        // Break the cycle\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    // record inverse dependency\n                    this._inverseDependencies2[dependency.id] = this._inverseDependencies2[dependency.id] || [];\n                    this._inverseDependencies2[dependency.id].push(module.id);\n                    if (dependency instanceof PluginDependency) {\n                        var plugin = this._modules2[dependency.pluginId];\n                        if (plugin && plugin.isComplete()) {\n                            this._loadPluginDependency(plugin.exports, dependency);\n                            continue;\n                        }\n                        // Record dependency for when the plugin gets loaded\n                        var inversePluginDeps = this._inversePluginDependencies2.get(dependency.pluginId);\n                        if (!inversePluginDeps) {\n                            inversePluginDeps = [];\n                            this._inversePluginDependencies2.set(dependency.pluginId, inversePluginDeps);\n                        }\n                        inversePluginDeps.push(dependency);\n                        this._loadModule(dependency.pluginId);\n                        continue;\n                    }\n                    this._loadModule(dependency.id);\n                }\n            }\n            if (module.unresolvedDependenciesCount === 0) {\n                this._onModuleComplete(module);\n            }\n        };\n        ModuleManager.prototype._onModuleComplete = function (module) {\n            var _this = this;\n            var recorder = this.getRecorder();\n            if (module.isComplete()) {\n                // already done\n                return;\n            }\n            var dependencies = module.dependencies;\n            var dependenciesValues = [];\n            if (dependencies) {\n                for (var i = 0, len = dependencies.length; i < len; i++) {\n                    var dependency = dependencies[i];\n                    if (dependency === RegularDependency.EXPORTS) {\n                        dependenciesValues[i] = module.exports;\n                        continue;\n                    }\n                    if (dependency === RegularDependency.MODULE) {\n                        dependenciesValues[i] = {\n                            id: module.strId,\n                            config: function () {\n                                return _this._config.getConfigForModule(module.strId);\n                            }\n                        };\n                        continue;\n                    }\n                    if (dependency === RegularDependency.REQUIRE) {\n                        dependenciesValues[i] = this._createRequire(module.moduleIdResolver);\n                        continue;\n                    }\n                    var dependencyModule = this._modules2[dependency.id];\n                    if (dependencyModule) {\n                        dependenciesValues[i] = dependencyModule.exports;\n                        continue;\n                    }\n                    dependenciesValues[i] = null;\n                }\n            }\n            module.complete(recorder, this._config, dependenciesValues);\n            // Fetch and clear inverse dependencies\n            var inverseDeps = this._inverseDependencies2[module.id];\n            this._inverseDependencies2[module.id] = null;\n            if (inverseDeps) {\n                // Resolve one inverse dependency at a time, always\n                // on the lookout for a completed module.\n                for (var i = 0, len = inverseDeps.length; i < len; i++) {\n                    var inverseDependencyId = inverseDeps[i];\n                    var inverseDependency = this._modules2[inverseDependencyId];\n                    inverseDependency.unresolvedDependenciesCount--;\n                    if (inverseDependency.unresolvedDependenciesCount === 0) {\n                        this._onModuleComplete(inverseDependency);\n                    }\n                }\n            }\n            var inversePluginDeps = this._inversePluginDependencies2.get(module.id);\n            if (inversePluginDeps) {\n                // This module is used as a plugin at least once\n                // Fetch and clear these inverse plugin dependencies\n                this._inversePluginDependencies2.delete(module.id);\n                // Resolve plugin dependencies one at a time\n                for (var i = 0, len = inversePluginDeps.length; i < len; i++) {\n                    this._loadPluginDependency(module.exports, inversePluginDeps[i]);\n                }\n            }\n        };\n        return ModuleManager;\n    }());\n    AMDLoader.ModuleManager = ModuleManager;\n})(AMDLoader || (AMDLoader = {}));\nvar define;\nvar AMDLoader;\n(function (AMDLoader) {\n    var env = new AMDLoader.Environment();\n    var moduleManager = null;\n    var DefineFunc = function (id, dependencies, callback) {\n        if (typeof id !== 'string') {\n            callback = dependencies;\n            dependencies = id;\n            id = null;\n        }\n        if (typeof dependencies !== 'object' || !Array.isArray(dependencies)) {\n            callback = dependencies;\n            dependencies = null;\n        }\n        if (!dependencies) {\n            dependencies = ['require', 'exports', 'module'];\n        }\n        if (id) {\n            moduleManager.defineModule(id, dependencies, callback, null, null);\n        }\n        else {\n            moduleManager.enqueueDefineAnonymousModule(dependencies, callback);\n        }\n    };\n    DefineFunc.amd = {\n        jQuery: true\n    };\n    var _requireFunc_config = function (params, shouldOverwrite) {\n        if (shouldOverwrite === void 0) { shouldOverwrite = false; }\n        moduleManager.configure(params, shouldOverwrite);\n    };\n    var RequireFunc = function () {\n        if (arguments.length === 1) {\n            if ((arguments[0] instanceof Object) && !Array.isArray(arguments[0])) {\n                _requireFunc_config(arguments[0]);\n                return;\n            }\n            if (typeof arguments[0] === 'string') {\n                return moduleManager.synchronousRequire(arguments[0]);\n            }\n        }\n        if (arguments.length === 2 || arguments.length === 3) {\n            if (Array.isArray(arguments[0])) {\n                moduleManager.defineModule(AMDLoader.Utilities.generateAnonymousModule(), arguments[0], arguments[1], arguments[2], null);\n                return;\n            }\n        }\n        throw new Error('Unrecognized require call');\n    };\n    RequireFunc.config = _requireFunc_config;\n    RequireFunc.getConfig = function () {\n        return moduleManager.getConfig().getOptionsLiteral();\n    };\n    RequireFunc.reset = function () {\n        moduleManager = moduleManager.reset();\n    };\n    RequireFunc.getBuildInfo = function () {\n        return moduleManager.getBuildInfo();\n    };\n    RequireFunc.getStats = function () {\n        return moduleManager.getLoaderEvents();\n    };\n    RequireFunc.define = function () {\n        return DefineFunc.apply(null, arguments);\n    };\n    function init() {\n        if (typeof AMDLoader.global.require !== 'undefined' || typeof require !== 'undefined') {\n            var _nodeRequire = (AMDLoader.global.require || require);\n            if (typeof _nodeRequire === 'function' && typeof _nodeRequire.resolve === 'function') {\n                // re-expose node's require function\n                var nodeRequire = AMDLoader.ensureRecordedNodeRequire(moduleManager.getRecorder(), _nodeRequire);\n                AMDLoader.global.nodeRequire = nodeRequire;\n                RequireFunc.nodeRequire = nodeRequire;\n                RequireFunc.__$__nodeRequire = nodeRequire;\n            }\n        }\n        if (env.isNode && !env.isElectronRenderer) {\n            module.exports = RequireFunc;\n            require = RequireFunc;\n        }\n        else {\n            if (!env.isElectronRenderer) {\n                AMDLoader.global.define = DefineFunc;\n            }\n            AMDLoader.global.require = RequireFunc;\n        }\n    }\n    AMDLoader.init = init;\n    if (typeof AMDLoader.global.define !== 'function' || !AMDLoader.global.define.amd) {\n        moduleManager = new AMDLoader.ModuleManager(env, AMDLoader.createScriptLoader(env), DefineFunc, RequireFunc, AMDLoader.Utilities.getHighPerformanceTimestamp());\n        // The global variable require can configure the loader\n        if (typeof AMDLoader.global.require !== 'undefined' && typeof AMDLoader.global.require !== 'function') {\n            RequireFunc.config(AMDLoader.global.require);\n        }\n        // This define is for the local closure defined in node in the case that the loader is concatenated\n        define = function () {\n            return DefineFunc.apply(null, arguments);\n        };\n        define.amd = DefineFunc.amd;\n        if (typeof doNotInitLoader === 'undefined') {\n            init();\n        }\n    }\n})(AMDLoader || (AMDLoader = {}));\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/*---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n * Please make sure to make edits in the .ts file at https://github.com/microsoft/vscode-loader/\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar CSSLoaderPlugin;\n(function (CSSLoaderPlugin) {\n    /**\n     * Known issue:\n     * - In IE there is no way to know if the CSS file loaded successfully or not.\n     */\n    var BrowserCSSLoader = /** @class */ (function () {\n        function BrowserCSSLoader() {\n            this._pendingLoads = 0;\n        }\n        BrowserCSSLoader.prototype.attachListeners = function (name, linkNode, callback, errorback) {\n            var unbind = function () {\n                linkNode.removeEventListener('load', loadEventListener);\n                linkNode.removeEventListener('error', errorEventListener);\n            };\n            var loadEventListener = function (e) {\n                unbind();\n                callback();\n            };\n            var errorEventListener = function (e) {\n                unbind();\n                errorback(e);\n            };\n            linkNode.addEventListener('load', loadEventListener);\n            linkNode.addEventListener('error', errorEventListener);\n        };\n        BrowserCSSLoader.prototype._onLoad = function (name, callback) {\n            this._pendingLoads--;\n            callback();\n        };\n        BrowserCSSLoader.prototype._onLoadError = function (name, errorback, err) {\n            this._pendingLoads--;\n            errorback(err);\n        };\n        BrowserCSSLoader.prototype._insertLinkNode = function (linkNode) {\n            this._pendingLoads++;\n            var head = document.head || document.getElementsByTagName('head')[0];\n            var other = head.getElementsByTagName('link') || head.getElementsByTagName('script');\n            if (other.length > 0) {\n                head.insertBefore(linkNode, other[other.length - 1]);\n            }\n            else {\n                head.appendChild(linkNode);\n            }\n        };\n        BrowserCSSLoader.prototype.createLinkTag = function (name, cssUrl, externalCallback, externalErrorback) {\n            var _this = this;\n            var linkNode = document.createElement('link');\n            linkNode.setAttribute('rel', 'stylesheet');\n            linkNode.setAttribute('type', 'text/css');\n            linkNode.setAttribute('data-name', name);\n            var callback = function () { return _this._onLoad(name, externalCallback); };\n            var errorback = function (err) { return _this._onLoadError(name, externalErrorback, err); };\n            this.attachListeners(name, linkNode, callback, errorback);\n            linkNode.setAttribute('href', cssUrl);\n            return linkNode;\n        };\n        BrowserCSSLoader.prototype._linkTagExists = function (name, cssUrl) {\n            var i, len, nameAttr, hrefAttr, links = document.getElementsByTagName('link');\n            for (i = 0, len = links.length; i < len; i++) {\n                nameAttr = links[i].getAttribute('data-name');\n                hrefAttr = links[i].getAttribute('href');\n                if (nameAttr === name || hrefAttr === cssUrl) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        BrowserCSSLoader.prototype.load = function (name, cssUrl, externalCallback, externalErrorback) {\n            if (this._linkTagExists(name, cssUrl)) {\n                externalCallback();\n                return;\n            }\n            var linkNode = this.createLinkTag(name, cssUrl, externalCallback, externalErrorback);\n            this._insertLinkNode(linkNode);\n        };\n        return BrowserCSSLoader;\n    }());\n    // ------------------------------ Finally, the plugin\n    var CSSPlugin = /** @class */ (function () {\n        function CSSPlugin() {\n            this._cssLoader = new BrowserCSSLoader();\n        }\n        CSSPlugin.prototype.load = function (name, req, load, config) {\n            config = config || {};\n            var cssConfig = config['vs/css'] || {};\n            if (cssConfig.disabled) {\n                // the plugin is asked to not create any style sheets\n                load({});\n                return;\n            }\n            var cssUrl = req.toUrl(name + '.css');\n            this._cssLoader.load(name, cssUrl, function (contents) {\n                load({});\n            }, function (err) {\n                if (typeof load.error === 'function') {\n                    load.error('Could not find ' + cssUrl + ' or it was empty');\n                }\n            });\n        };\n        return CSSPlugin;\n    }());\n    CSSLoaderPlugin.CSSPlugin = CSSPlugin;\n    define('vs/css', new CSSPlugin());\n})(CSSLoaderPlugin || (CSSLoaderPlugin = {}));\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/*---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n * Please make sure to make edits in the .ts file at https://github.com/microsoft/vscode-loader/\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nvar NLSLoaderPlugin;\n(function (NLSLoaderPlugin) {\n    var Environment = /** @class */ (function () {\n        function Environment() {\n            this._detected = false;\n            this._isPseudo = false;\n        }\n        Object.defineProperty(Environment.prototype, \"isPseudo\", {\n            get: function () {\n                this._detect();\n                return this._isPseudo;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Environment.prototype._detect = function () {\n            if (this._detected) {\n                return;\n            }\n            this._detected = true;\n            this._isPseudo = (typeof document !== 'undefined' && document.location && document.location.hash.indexOf('pseudo=true') >= 0);\n        };\n        return Environment;\n    }());\n    function _format(message, args, env) {\n        var result;\n        if (args.length === 0) {\n            result = message;\n        }\n        else {\n            result = message.replace(/\\{(\\d+)\\}/g, function (match, rest) {\n                var index = rest[0];\n                var arg = args[index];\n                var result = match;\n                if (typeof arg === 'string') {\n                    result = arg;\n                }\n                else if (typeof arg === 'number' || typeof arg === 'boolean' || arg === void 0 || arg === null) {\n                    result = String(arg);\n                }\n                return result;\n            });\n        }\n        if (env.isPseudo) {\n            // FF3B and FF3D is the Unicode zenkaku representation for [ and ]\n            result = '\\uFF3B' + result.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\n        }\n        return result;\n    }\n    function findLanguageForModule(config, name) {\n        var result = config[name];\n        if (result)\n            return result;\n        result = config['*'];\n        if (result)\n            return result;\n        return null;\n    }\n    function localize(env, data, message) {\n        var args = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            args[_i - 3] = arguments[_i];\n        }\n        return _format(message, args, env);\n    }\n    function createScopedLocalize(scope, env) {\n        return function (idx, defaultValue) {\n            var restArgs = Array.prototype.slice.call(arguments, 2);\n            return _format(scope[idx], restArgs, env);\n        };\n    }\n    var NLSPlugin = /** @class */ (function () {\n        function NLSPlugin(env) {\n            var _this = this;\n            this._env = env;\n            this.localize = function (data, message) {\n                var args = [];\n                for (var _i = 2; _i < arguments.length; _i++) {\n                    args[_i - 2] = arguments[_i];\n                }\n                return localize.apply(void 0, __spreadArrays([_this._env, data, message], args));\n            };\n        }\n        NLSPlugin.prototype.setPseudoTranslation = function (value) {\n            this._env._isPseudo = value;\n        };\n        NLSPlugin.prototype.create = function (key, data) {\n            return {\n                localize: createScopedLocalize(data[key], this._env)\n            };\n        };\n        NLSPlugin.prototype.load = function (name, req, load, config) {\n            var _this = this;\n            config = config || {};\n            if (!name || name.length === 0) {\n                load({\n                    localize: this.localize\n                });\n            }\n            else {\n                var pluginConfig = config['vs/nls'] || {};\n                var language = pluginConfig.availableLanguages ? findLanguageForModule(pluginConfig.availableLanguages, name) : null;\n                var suffix = '.nls';\n                if (language !== null && language !== NLSPlugin.DEFAULT_TAG) {\n                    suffix = suffix + '.' + language;\n                }\n                var messagesLoaded_1 = function (messages) {\n                    if (Array.isArray(messages)) {\n                        messages.localize = createScopedLocalize(messages, _this._env);\n                    }\n                    else {\n                        messages.localize = createScopedLocalize(messages[name], _this._env);\n                    }\n                    load(messages);\n                };\n                if (typeof pluginConfig.loadBundle === 'function') {\n                    pluginConfig.loadBundle(name, language, function (err, messages) {\n                        // We have an error. Load the English default strings to not fail\n                        if (err) {\n                            req([name + '.nls'], messagesLoaded_1);\n                        }\n                        else {\n                            messagesLoaded_1(messages);\n                        }\n                    });\n                }\n                else {\n                    req([name + suffix], messagesLoaded_1);\n                }\n            }\n        };\n        NLSPlugin.DEFAULT_TAG = 'i-default';\n        return NLSPlugin;\n    }());\n    NLSLoaderPlugin.NLSPlugin = NLSPlugin;\n    define('vs/nls', new NLSPlugin(new Environment()));\n})(NLSLoaderPlugin || (NLSLoaderPlugin = {}));\n"]}